
;; Function c2fstrv (c2fstrv)

Spilling for insn 39.
Spilling for insn 75.

Reloads for insn # 39
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int 16 [0x10])) [0 elem_len+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax [orig:69 D.2768 ] [69])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int 16 [0x10])) [0 elem_len+0 S4 A32])
	reload_out_reg: (reg:SI 0 ax [orig:69 D.2768 ] [69])
	reload_reg_rtx: (reg:SI 0 ax [orig:69 D.2768 ] [69])

Reloads for insn # 75
Reload 0: reload_in (SI) = (reg/f:SI 0 ax [orig:82 fstr ] [82])
	reload_out (SI) = (reg:SI 2 cx [orig:61 D.2776 ] [61])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg/f:SI 0 ax [orig:82 fstr ] [82])
	reload_out_reg: (reg:SI 2 cx [orig:61 D.2776 ] [61])
	reload_reg_rtx: (reg:SI 2 cx [orig:61 D.2776 ] [61])
;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 2  62 in 1  63 in 0  
64 in 0  65 in 0  66 in 0  67 in 0  68 in 0  69 in 0  
70 in 0  71 in 1  72 in 0  73 in 0  74 in 0  75 in 0  
76 in 0  77 in 0  78 in 0  79 in 0  80 in 1  81 in 1  
82 in 0  83 in 0  84 in 1  85 in 1  

;; Hard regs used:  0 1 2 6 17

(note 1 0 3 ("cfortran.h") 425)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("cfortran.h") 428)

(insn 7 6 8 3 cfortran.h:428 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 8 7 9 3 cfortran.h:428 (set (pc)
        (label_ref 62)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 9 8 10)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 10 9 11 4 3 "" [1 uses])

(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 12 11 13 4 ("cfortran.h") 429)

(insn 13 12 14 4 cfortran.h:429 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 14 13 15 4 cfortran.h:429 (set (pc)
        (label_ref 25)) 380 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 15 14 16)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 16 15 17 5 5 "" [1 uses])

(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 5 cfortran.h:429 (set (reg/f:SI 0 ax [orig:73 cstr ] [73])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 cstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 19 18 20 5 cfortran.h:429 (set (reg:QI 1 dx [orig:71 D.2766 ] [71])
        (mem:QI (reg/f:SI 0 ax [orig:73 cstr ] [73]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 20 19 21 5 cfortran.h:429 (set (reg/f:SI 0 ax [orig:74 fstr ] [74])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 fstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 21 20 22 5 cfortran.h:429 (set (mem:QI (reg/f:SI 0 ax [orig:74 fstr ] [74]) [0 S1 A8])
        (reg:QI 1 dx [orig:71 D.2766 ] [71])) 43 {*movqi_1} (nil)
    (nil))

(insn 22 21 23 5 cfortran.h:429 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 12 [0xc])) [0 fstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 fstr+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 23 22 24 5 cfortran.h:429 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 8 [0x8])) [0 cstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 cstr+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 24 23 25 5 cfortran.h:429 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 25 24 26 6 4 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 cfortran.h:429 (set (reg:SI 0 ax [orig:75 j ] [75])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 28 27 29 6 cfortran.h:429 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:75 j ] [75])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 elem_len+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 29 28 31 6 cfortran.h:429 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 31 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 cfortran.h:429 (set (reg/f:SI 0 ax [orig:76 cstr ] [76])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 cstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 33 32 34 7 cfortran.h:429 (set (reg:QI 0 ax [orig:70 D.2767 ] [70])
        (mem:QI (reg/f:SI 0 ax [orig:76 cstr ] [76]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 34 33 35 7 cfortran.h:429 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:70 D.2767 ] [70])
            (const_int 0 [0x0]))) 6 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 35 34 36 7 cfortran.h:429 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 36 35 37 8 6 "" [1 uses])

(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 38 37 99 8 ("cfortran.h") 430)

(insn 99 38 39 8 cfortran.h:430 (set (reg:SI 0 ax [orig:69 D.2768 ] [69])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 elem_len+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 39 99 40 8 cfortran.h:430 (parallel [
            (set (reg:SI 0 ax [orig:69 D.2768 ] [69])
                (plus:SI (reg:SI 0 ax [orig:69 D.2768 ] [69])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 40 39 43 8 cfortran.h:430 (parallel [
            (set (reg:SI 0 ax [orig:68 D.2769 ] [68])
                (minus:SI (reg:SI 0 ax [orig:69 D.2768 ] [69])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 172 {*subsi_1} (nil)
    (nil))

(insn 43 40 44 8 cfortran.h:430 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 8 [0x8])) [0 cstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 cstr+0 S4 A32])
                    (reg:SI 0 ax [orig:66 D.2771 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(note 44 43 45 8 ("cfortran.h") 431)

(jump_insn 45 44 46 8 cfortran.h:431 (set (pc)
        (label_ref 53)) 380 {jump} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 47)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 47 46 48 9 9 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 cfortran.h:431 (set (reg/f:SI 0 ax [orig:77 fstr ] [77])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 fstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 50 49 51 9 cfortran.h:431 (set (mem:QI (reg/f:SI 0 ax [orig:77 fstr ] [77]) [0 S1 A8])
        (const_int 32 [0x20])) 43 {*movqi_1} (nil)
    (nil))

(insn 51 50 52 9 cfortran.h:431 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 12 [0xc])) [0 fstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 fstr+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 52 51 53 9 cfortran.h:431 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 53 52 54 10 8 "" [1 uses])

(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 10 cfortran.h:431 (set (reg:SI 0 ax [orig:78 j ] [78])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 56 55 57 10 cfortran.h:431 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:78 j ] [78])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 elem_len+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 57 56 59 10 cfortran.h:431 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 59 57 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 60 59 61 11 ("cfortran.h") 428)

(insn 61 60 62 11 cfortran.h:428 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -8 [0xfffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -8 [0xfffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 62 61 63 12 2 "" [1 uses])

(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 12 cfortran.h:428 (set (reg:SI 1 dx [orig:81 sizeofcstr ] [81])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 65 64 67 12 cfortran.h:428 (parallel [
            (set (reg:SI 0 ax [79])
                (div:SI (reg:SI 1 dx [orig:81 sizeofcstr ] [81])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (set (reg:SI 1 dx [80])
                (mod:SI (reg:SI 1 dx [orig:81 sizeofcstr ] [81])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 193 {*divmodsi4_nocltd} (nil)
    (nil))

(insn 67 65 68 12 cfortran.h:428 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:65 D.2772 ] [65])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -8 [0xfffffff8])) [0 i+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 68 67 70 12 cfortran.h:428 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 10)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 70 68 71 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 71 70 72 13 ("cfortran.h") 433)

(insn 72 71 73 13 cfortran.h:433 (set (reg:SI 0 ax [orig:63 sizeofcstr.0 ] [63])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 73 72 74 13 cfortran.h:433 (set (reg:SI 1 dx [orig:62 sizeofcstr.1 ] [62])
        (reg:SI 0 ax [orig:63 sizeofcstr.0 ] [63])) 34 {*movsi_1} (nil)
    (nil))

(insn 74 73 100 13 cfortran.h:433 (set (reg/f:SI 0 ax [orig:82 fstr ] [82])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 fstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 100 74 75 13 cfortran.h:433 (set (reg:SI 2 cx [orig:61 D.2776 ] [61])
        (reg/f:SI 0 ax [orig:82 fstr ] [82])) 34 {*movsi_1} (nil)
    (nil))

(insn 75 100 76 13 cfortran.h:433 (parallel [
            (set (reg:SI 2 cx [orig:61 D.2776 ] [61])
                (minus:SI (reg:SI 2 cx [orig:61 D.2776 ] [61])
                    (reg:SI 1 dx [orig:62 sizeofcstr.1 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) 172 {*subsi_1} (nil)
    (expr_list:REG_EQUAL (minus:SI (mem/f/c/i:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [0 fstr+0 S4 A32])
            (reg:SI 1 dx [orig:62 sizeofcstr.1 ] [62]))
        (nil)))

(insn 76 75 77 13 cfortran.h:433 (set (reg:SI 1 dx [orig:85 sizeofcstr ] [85])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 77 76 81 13 cfortran.h:433 (parallel [
            (set (reg:SI 0 ax [83])
                (div:SI (reg:SI 1 dx [orig:85 sizeofcstr ] [85])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (set (reg:SI 1 dx [84])
                (mod:SI (reg:SI 1 dx [orig:85 sizeofcstr ] [85])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 193 {*divmodsi4_nocltd} (nil)
    (nil))

(insn 81 77 85 13 cfortran.h:433 (parallel [
            (set (reg:SI 0 ax [orig:64 D.2773 ] [64])
                (plus:SI (reg:SI 2 cx [orig:61 D.2776 ] [61])
                    (reg:SI 0 ax [orig:58 D.2779 ] [58])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(note 85 81 94 13 NOTE_INSN_FUNCTION_END)

(insn 94 85 98 13 cfortran.h:433 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 13, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 98 94 0 NOTE_INSN_DELETED)


;; Function f2cstrv (f2cstrv)

;; Register dispositions:
58 in 0  59 in 0  60 in 1  61 in 0  62 in 0  63 in 0  
64 in 1  65 in 0  66 in 0  67 in 0  68 in 0  69 in 1  
70 in 1  71 in 0  72 in 0  73 in 0  74 in 0  75 in 0  
76 in 0  77 in 1  78 in 1  

;; Hard regs used:  0 1 6 17

(note 1 0 3 ("cfortran.h") 442)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("cfortran.h") 445)

(insn 7 6 9 3 cfortran.h:445 (set (reg:SI 0 ax [orig:66 sizeofcstr.2 ] [66])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 7 10 3 cfortran.h:445 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 12 [0xc])) [0 cstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 cstr+0 S4 A32])
                    (reg:SI 0 ax [orig:65 sizeofcstr.3 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(note 10 9 11 3 ("cfortran.h") 446)

(insn 11 10 12 3 cfortran.h:446 (set (reg:SI 1 dx [orig:70 sizeofcstr ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 12 11 13 3 cfortran.h:446 (parallel [
            (set (reg:SI 0 ax [68])
                (div:SI (reg:SI 1 dx [orig:70 sizeofcstr ] [70])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (set (reg:SI 1 dx [69])
                (mod:SI (reg:SI 1 dx [orig:70 sizeofcstr ] [70])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 193 {*divmodsi4_nocltd} (nil)
    (nil))

(insn 13 12 14 3 cfortran.h:446 (set (reg:SI 1 dx [orig:64 D.2798 ] [64])
        (reg:SI 0 ax [68])) 34 {*movsi_1} (nil)
    (nil))

(insn 14 13 15 3 cfortran.h:446 (set (reg:SI 0 ax [orig:71 sizeofcstr ] [71])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 15 14 18 3 cfortran.h:446 (parallel [
            (set (reg:SI 0 ax [orig:63 D.2799 ] [63])
                (minus:SI (reg:SI 0 ax [orig:71 sizeofcstr ] [71])
                    (reg:SI 1 dx [orig:64 D.2798 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) 172 {*subsi_1} (nil)
    (expr_list:REG_EQUAL (minus:SI (mem/c/i:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [0 sizeofcstr+0 S4 A32])
            (reg:SI 1 dx [orig:64 D.2798 ] [64]))
        (nil)))

(insn 18 15 19 3 cfortran.h:446 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 8 [0x8])) [0 fstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 fstr+0 S4 A32])
                    (reg:SI 0 ax [orig:61 D.2801 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(note 19 18 20 3 ("cfortran.h") 447)

(insn 20 19 21 3 cfortran.h:447 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 21 20 22 3 cfortran.h:447 (set (pc)
        (label_ref 51)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 22 21 23)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 23 22 24 4 15 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 4 ("cfortran.h") 448)

(insn 26 25 27 4 cfortran.h:448 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 12 [0xc])) [0 cstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 cstr+0 S4 A32])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 27 26 28 4 cfortran.h:448 (set (reg/f:SI 0 ax [orig:72 cstr ] [72])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 cstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 28 27 29 4 cfortran.h:448 (set (mem:QI (reg/f:SI 0 ax [orig:72 cstr ] [72]) [0 S1 A8])
        (const_int 0 [0x0])) 43 {*movqi_1} (nil)
    (nil))

(note 29 28 30 4 ("cfortran.h") 449)

(insn 30 29 31 4 cfortran.h:449 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
        (const_int 1 [0x1])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 31 30 32 4 cfortran.h:449 (set (pc)
        (label_ref 42)) 380 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 33)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 33 32 34 5 17 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 cfortran.h:449 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 12 [0xc])) [0 cstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 cstr+0 S4 A32])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 36 35 37 5 cfortran.h:449 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 8 [0x8])) [0 fstr+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 fstr+0 S4 A32])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 37 36 38 5 cfortran.h:449 (set (reg/f:SI 0 ax [orig:73 fstr ] [73])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 fstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 38 37 39 5 cfortran.h:449 (set (reg:QI 1 dx [orig:60 D.2802 ] [60])
        (mem:QI (reg/f:SI 0 ax [orig:73 fstr ] [73]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 39 38 40 5 cfortran.h:449 (set (reg/f:SI 0 ax [orig:74 cstr ] [74])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 cstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 40 39 41 5 cfortran.h:449 (set (mem:QI (reg/f:SI 0 ax [orig:74 cstr ] [74]) [0 S1 A8])
        (reg:QI 1 dx [orig:60 D.2802 ] [60])) 43 {*movqi_1} (nil)
    (nil))

(insn 41 40 42 5 cfortran.h:449 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 42 41 43 6 16 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 cfortran.h:449 (set (reg:SI 0 ax [orig:75 j ] [75])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 j+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 45 44 46 6 cfortran.h:449 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:75 j ] [75])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 elem_len+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 46 45 48 6 cfortran.h:449 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 48 46 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 7 ("cfortran.h") 447)

(insn 50 49 51 7 cfortran.h:447 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -8 [0xfffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -8 [0xfffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 51 50 52 8 14 "" [1 uses])

(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 8 cfortran.h:447 (set (reg:SI 1 dx [orig:78 sizeofcstr ] [78])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 54 53 56 8 cfortran.h:447 (parallel [
            (set (reg:SI 0 ax [76])
                (div:SI (reg:SI 1 dx [orig:78 sizeofcstr ] [78])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (set (reg:SI 1 dx [77])
                (mod:SI (reg:SI 1 dx [orig:78 sizeofcstr ] [78])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 elem_len+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 193 {*divmodsi4_nocltd} (nil)
    (nil))

(insn 56 54 57 8 cfortran.h:447 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.2803 ] [59])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -8 [0xfffffff8])) [0 i+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 57 56 59 8 cfortran.h:447 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 59 57 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 60 59 61 9 ("cfortran.h") 450)

(insn 61 60 65 9 cfortran.h:450 (set (reg:SI 0 ax [orig:58 D.2804 ] [58])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 cstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(note 65 61 74 9 NOTE_INSN_FUNCTION_END)

(insn 74 65 78 9 cfortran.h:450 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 9, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 78 74 0 NOTE_INSN_DELETED)


;; Function kill_trailing (kill_trailing)

Spilling for insn 51.

Reloads for insn # 51
Reload 0: reload_in (SI) = (reg:SI 61 [ iftmp.4 ])
	reload_out (SI) = (reg:SI 0 ax [orig:59 D.2819 ] [59])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 61 [ iftmp.4 ])
	reload_out_reg: (reg:SI 0 ax [orig:59 D.2819 ] [59])
	reload_reg_rtx: (reg:SI 0 ax [orig:59 D.2819 ] [59])
;; Register dispositions:
58 in 0  59 in 0  60 in 0  62 in 0  63 in 0  64 in 0  
65 in 0  66 in 0  67 in 0  68 in 0  69 in 0  70 in 0  
71 in 0  72 in 0  73 in 0  

;; Hard regs used:  0 6 7 17

(note 1 0 6 ("cfortran.h") 458)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(insn 3 2 4 2 cfortran.h:458 (set (reg:SI 0 ax [orig:66 t ] [66])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 t+0 S1 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 4 3 5 2 cfortran.h:458 (set (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 t+0 S1 A8])
        (reg:QI 0 ax [orig:66 t ] [66])) 43 {*movqi_1} (nil)
    (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 ("cfortran.h") 459)

(insn 9 8 10 2 cfortran.h:459 (set (reg/f:SI 0 ax [orig:67 s ] [67])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 s+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 2 cfortran.h:459 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:67 s ] [67])) 34 {*movsi_1} (nil)
    (nil))

(call_insn/u 11 10 15 2 cfortran.h:459 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f18c0 strlen>) [0 S1 A8])
            (const_int 4 [0x4]))) 557 {*call_value_0} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (nil)))

(insn 15 11 16 2 cfortran.h:459 (parallel [
            (set (reg:SI 0 ax [69])
                (plus:SI (reg:SI 0 ax [orig:63 D.2815 ] [63])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 s+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 16 15 17 2 cfortran.h:459 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])
        (reg:SI 0 ax [69])) 34 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (plus:SI (reg:SI 0 ax [orig:63 D.2815 ] [63])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 s+0 S4 A32]))
        (nil)))

(note 17 16 18 2 ("cfortran.h") 460)

(insn 18 17 19 2 cfortran.h:460 (set (reg/f:SI 0 ax [orig:70 e ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 19 18 20 2 cfortran.h:460 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 0 ax [orig:70 e ] [70])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 s+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 20 19 21 2 cfortran.h:460 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 21 20 22 4 23 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 4 ("cfortran.h") 461)

(insn 24 23 25 4 cfortran.h:461 (set (reg/f:SI 0 ax [orig:71 e ] [71])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 25 24 26 4 cfortran.h:461 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 0 ax [orig:71 e ] [71])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 s+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 26 25 28 4 cfortran.h:461 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 28 26 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 5 cfortran.h:461 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 30 29 31 5 cfortran.h:461 (set (reg/f:SI 0 ax [orig:72 e ] [72])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 31 30 32 5 cfortran.h:461 (set (reg:QI 0 ax [orig:62 D.2816 ] [62])
        (mem:QI (reg/f:SI 0 ax [orig:72 e ] [72]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 32 31 33 5 cfortran.h:461 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.2816 ] [62])
            (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                    (const_int -20 [0xffffffec])) [0 t+0 S1 A8]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 33 32 34 5 cfortran.h:461 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 34 33 35 6 24 "" [1 uses])

(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 36 35 37 6 ("cfortran.h") 462)

(insn 37 36 38 6 cfortran.h:462 (set (reg/f:SI 0 ax [orig:73 e ] [73])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 38 37 39 6 cfortran.h:462 (set (reg:QI 0 ax [orig:60 D.2818 ] [60])
        (mem:QI (reg/f:SI 0 ax [orig:73 e ] [73]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 39 38 40 6 cfortran.h:462 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2818 ] [60])
            (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                    (const_int -20 [0xffffffec])) [0 t+0 S1 A8]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 40 39 42 6 cfortran.h:462 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 42 40 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 7 cfortran.h:462 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -24 [0xffffffe8])) [0 iftmp.4+0 S4 A8])
        (const_int 1 [0x1])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 44 43 45 7 cfortran.h:462 (set (pc)
        (label_ref 49)) 380 {jump} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

(barrier 45 44 46)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 46 45 47 8 26 "" [1 uses])

(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 8 cfortran.h:462 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -24 [0xffffffe8])) [0 iftmp.4+0 S4 A8])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
(code_label 49 48 50 9 28 "" [1 uses])

(note 50 49 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 74 50 51 9 cfortran.h:462 (set (reg:SI 0 ax [orig:59 D.2819 ] [59])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -24 [0xffffffe8])) [0 iftmp.4+0 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 51 74 52 9 cfortran.h:462 (parallel [
            (set (reg:SI 0 ax [orig:59 D.2819 ] [59])
                (plus:SI (reg:SI 0 ax [orig:59 D.2819 ] [59])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 e+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 52 51 53 9 cfortran.h:462 (set (mem:QI (reg:SI 0 ax [orig:59 D.2819 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 43 {*movqi_1} (nil)
    (nil))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 53 52 54 10 22 "" [1 uses])

(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 55 54 56 10 ("cfortran.h") 463)

(insn 56 55 60 10 cfortran.h:463 (set (reg:SI 0 ax [orig:58 D.2820 ] [58])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 s+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(note 60 56 69 10 NOTE_INSN_FUNCTION_END)

(insn 69 60 73 10 cfortran.h:463 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 10, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 73 69 0 NOTE_INSN_DELETED)


;; Function kill_trailingn (kill_trailingn)

Spilling for insn 54.

Reloads for insn # 54
Reload 0: reload_in (SI) = (reg:SI 61 [ iftmp.5 ])
	reload_out (SI) = (reg:SI 0 ax [orig:59 D.2839 ] [59])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 61 [ iftmp.5 ])
	reload_out_reg: (reg:SI 0 ax [orig:59 D.2839 ] [59])
	reload_reg_rtx: (reg:SI 0 ax [orig:59 D.2839 ] [59])
;; Register dispositions:
58 in 0  59 in 0  60 in 0  62 in 0  63 in 0  64 in 0  
65 in 0  66 in 0  67 in 0  68 in 0  69 in 0  70 in 0  


;; Hard regs used:  0 6 17

(note 1 0 6 ("cfortran.h") 474)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(insn 3 2 4 2 cfortran.h:474 (set (reg:SI 0 ax [orig:64 t ] [64])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 t+0 S1 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 4 3 5 2 cfortran.h:474 (set (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 t+0 S1 A8])
        (reg:QI 0 ax [orig:64 t ] [64])) 43 {*movqi_1} (nil)
    (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 ("cfortran.h") 475)

(insn 9 8 10 2 cfortran.h:475 (set (reg/f:SI 0 ax [orig:65 e ] [65])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 2 cfortran.h:475 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:65 e ] [65])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 s+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 11 10 13 2 cfortran.h:475 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 13 11 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 cfortran.h:475 (set (reg/f:SI 0 ax [orig:66 e ] [66])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 15 14 16 4 cfortran.h:475 (set (mem:QI (reg/f:SI 0 ax [orig:66 e ] [66]) [0 S1 A8])
        (const_int 0 [0x0])) 43 {*movqi_1} (nil)
    (nil))

(jump_insn 16 15 17 4 cfortran.h:475 (set (pc)
        (label_ref 56)) 380 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 17 16 18)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 18 17 19 5 31 "" [1 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 20 19 21 5 ("cfortran.h") 476)

(insn 21 20 22 5 cfortran.h:476 (set (reg/f:SI 0 ax [orig:67 e ] [67])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 22 21 23 5 cfortran.h:476 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 0 ax [orig:67 e ] [67])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 s+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 23 22 24 5 cfortran.h:476 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 24 23 25 6 34 "" [1 uses])

(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 26 25 27 6 ("cfortran.h") 477)

(insn 27 26 28 6 cfortran.h:477 (set (reg/f:SI 0 ax [orig:68 e ] [68])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 28 27 29 6 cfortran.h:477 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 0 ax [orig:68 e ] [68])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 8 [0x8])) [0 s+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 29 28 31 6 cfortran.h:477 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 31 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 cfortran.h:477 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 16 [0x10])) [0 e+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 e+0 S4 A32])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 33 32 34 7 cfortran.h:477 (set (reg/f:SI 0 ax [orig:69 e ] [69])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 34 33 35 7 cfortran.h:477 (set (reg:QI 0 ax [orig:62 D.2836 ] [62])
        (mem:QI (reg/f:SI 0 ax [orig:69 e ] [69]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 35 34 36 7 cfortran.h:477 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.2836 ] [62])
            (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                    (const_int -4 [0xfffffffc])) [0 t+0 S1 A8]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 36 35 37 7 cfortran.h:477 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 37 36 38 8 35 "" [1 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 39 38 40 8 ("cfortran.h") 478)

(insn 40 39 41 8 cfortran.h:478 (set (reg/f:SI 0 ax [orig:70 e ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 e+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 41 40 42 8 cfortran.h:478 (set (reg:QI 0 ax [orig:60 D.2838 ] [60])
        (mem:QI (reg/f:SI 0 ax [orig:70 e ] [70]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 42 41 43 8 cfortran.h:478 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2838 ] [60])
            (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                    (const_int -4 [0xfffffffc])) [0 t+0 S1 A8]))) 7 {*cmpqi_1} (nil)
    (nil))

(jump_insn 43 42 45 8 cfortran.h:478 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 45 43 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 9 cfortran.h:478 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 iftmp.5+0 S4 A8])
        (const_int 1 [0x1])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 47 46 48 9 cfortran.h:478 (set (pc)
        (label_ref 52)) 380 {jump} (nil)
    (nil))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

(barrier 48 47 49)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 49 48 50 10 37 "" [1 uses])

(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 10 cfortran.h:478 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 iftmp.5+0 S4 A8])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
(code_label 52 51 53 11 39 "" [1 uses])

(note 53 52 77 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 77 53 54 11 cfortran.h:478 (set (reg:SI 0 ax [orig:59 D.2839 ] [59])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 iftmp.5+0 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 54 77 55 11 cfortran.h:478 (parallel [
            (set (reg:SI 0 ax [orig:59 D.2839 ] [59])
                (plus:SI (reg:SI 0 ax [orig:59 D.2839 ] [59])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 16 [0x10])) [0 e+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 55 54 56 11 cfortran.h:478 (set (mem:QI (reg:SI 0 ax [orig:59 D.2839 ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 43 {*movqi_1} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 56 55 57 12 33 "" [2 uses])

(note 57 56 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 12 ("cfortran.h") 479)

(insn 59 58 63 12 cfortran.h:479 (set (reg:SI 0 ax [orig:58 D.2840 ] [58])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 s+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(note 63 59 72 12 NOTE_INSN_FUNCTION_END)

(insn 72 63 76 12 cfortran.h:479 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 12, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 76 72 0 NOTE_INSN_DELETED)


;; Function vkill_trailing (vkill_trailing)

Spilling for insn 15.

Reloads for insn # 15
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax [orig:70 D.2861 ] [70])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
	reload_out_reg: (reg:SI 0 ax [orig:70 D.2861 ] [70])
	reload_reg_rtx: (reg:SI 0 ax [orig:70 D.2861 ] [70])
;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  62 in 0  63 in 0  
64 in 2  65 in 1  66 in 0  67 in 0  68 in 0  69 in 0  
70 in 0  71 in 0  72 in 0  73 in 0  74 in 0  75 in 1  
76 in 1  

;; Hard regs used:  0 1 2 6 7 17

(note 1 0 6 ("cfortran.h") 489)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 3 2 NOTE_INSN_DELETED)

(insn 3 2 4 2 cfortran.h:489 (set (reg:SI 0 ax [orig:72 t ] [72])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 t+0 S1 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 4 3 5 2 cfortran.h:489 (set (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 t+0 S1 A8])
        (reg:QI 0 ax [orig:72 t ] [72])) 43 {*movqi_1} (nil)
    (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 ("cfortran.h") 490)

(insn 9 8 10 2 cfortran.h:490 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 10 9 11 2 cfortran.h:490 (set (pc)
        (label_ref 33)) 380 {jump} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 12)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 12 11 13 4 43 "" [1 uses])

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 14 13 61 4 ("cfortran.h") 491)

(insn 61 14 15 4 cfortran.h:491 (set (reg:SI 0 ax [orig:70 D.2861 ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 15 61 16 4 cfortran.h:491 (parallel [
            (set (reg:SI 0 ax [orig:70 D.2861 ] [70])
                (plus:SI (reg:SI 0 ax [orig:70 D.2861 ] [70])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 16 15 19 4 cfortran.h:491 (parallel [
            (set (reg:SI 0 ax [orig:69 D.2862 ] [69])
                (mult:SI (reg:SI 0 ax [orig:70 D.2861 ] [70])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 elem_len+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 182 {*mulsi3_1} (nil)
    (nil))

(insn 19 16 20 4 cfortran.h:491 (parallel [
            (set (reg:SI 0 ax [orig:66 D.2865 ] [66])
                (plus:SI (reg:SI 0 ax [orig:67 D.2864 ] [67])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 cstr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 20 19 21 4 cfortran.h:491 (parallel [
            (set (reg:SI 1 dx [orig:65 D.2866 ] [65])
                (plus:SI (reg:SI 0 ax [orig:66 D.2865 ] [66])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 21 20 22 4 cfortran.h:491 (set (reg:SI 2 cx [orig:64 D.2867 ] [64])
        (sign_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 6 bp)
                    (const_int -20 [0xffffffec])) [0 t+0 S1 A8]))) 83 {extendqisi2} (nil)
    (nil))

(insn 22 21 23 4 cfortran.h:491 (set (reg:SI 0 ax [orig:73 elem_len ] [73])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 elem_len+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 23 22 26 4 cfortran.h:491 (parallel [
            (set (reg:SI 0 ax [orig:63 D.2868 ] [63])
                (mult:SI (reg:SI 0 ax [orig:73 elem_len ] [73])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 182 {*mulsi3_1} (nil)
    (nil))

(insn 26 23 27 4 cfortran.h:491 (parallel [
            (set (reg:SI 0 ax [orig:60 D.2871 ] [60])
                (plus:SI (reg:SI 0 ax [orig:61 D.2870 ] [61])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 cstr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 27 26 28 4 cfortran.h:491 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 dx [orig:65 D.2866 ] [65])) 34 {*movsi_1} (nil)
    (nil))

(insn 28 27 29 4 cfortran.h:491 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2 cx [orig:64 D.2867 ] [64])) 34 {*movsi_1} (nil)
    (nil))

(insn 29 28 30 4 cfortran.h:491 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg:SI 0 ax [orig:60 D.2871 ] [60])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 30 29 31 4 cfortran.h:491 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("kill_trailingn") [flags 0x3] <function_decl 0x40313930 kill_trailingn>) [0 S1 A8])
            (const_int 12 [0xc]))) 557 {*call_value_0} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(note 31 30 32 4 ("cfortran.h") 490)

(insn 32 31 33 4 cfortran.h:490 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 33 32 34 5 42 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 cfortran.h:490 (set (reg:SI 1 dx [orig:76 sizeofcstr ] [76])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 sizeofcstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 36 35 38 5 cfortran.h:490 (parallel [
            (set (reg:SI 0 ax [74])
                (div:SI (reg:SI 1 dx [orig:76 sizeofcstr ] [76])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 elem_len+0 S4 A32])))
            (set (reg:SI 1 dx [75])
                (mod:SI (reg:SI 1 dx [orig:76 sizeofcstr ] [76])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 elem_len+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 193 {*divmodsi4_nocltd} (nil)
    (nil))

(insn 38 36 39 5 cfortran.h:490 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.2872 ] [59])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -4 [0xfffffffc])) [0 i+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 39 38 41 5 cfortran.h:490 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 41 39 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 42 41 43 6 ("cfortran.h") 492)

(insn 43 42 47 6 cfortran.h:492 (set (reg:SI 0 ax [orig:58 D.2873 ] [58])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 cstr+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(note 47 43 56 6 NOTE_INSN_FUNCTION_END)

(insn 56 47 60 6 cfortran.h:492 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 60 56 0 NOTE_INSN_DELETED)


;; Function num_elem (num_elem)

Spilling for insn 16.
Using reg 0 for reload 0
Spilling for insn 76.
Using reg 0 for reload 0

Reloads for insn # 16
Reload 0: reload_out (SI) = (reg:SI 64 [ D.2890 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 64 [ D.2890 ])
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 76
Reload 0: reload_out (SI) = (reg:SI 64 [ D.2890 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 64 [ D.2890 ])
	reload_reg_rtx: (reg:SI 0 ax)
;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  62 in 0  63 in 0  
65 in 0  66 in 0  67 in 0  68 in 1  69 in 0  

;; Hard regs used:  0 1 6 17

(note 1 0 3 ("cfortran.h") 536)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("cfortran.h") 538)

(insn 7 6 8 3 cfortran.h:538 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 20 [0x14])) [0 num_term+0 S4 A32])
            (const_int -1 [0xffffffff]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 8 7 10 3 cfortran.h:538 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 10 8 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 cfortran.h:538 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 20 [0x14])) [0 num_term+0 S4 A32])
            (const_int -2 [0xfffffffe]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 12 11 13 4 cfortran.h:538 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 13 12 14 5 47 "" [1 uses])

(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 15 14 16 5 ("cfortran.h") 539)

(insn 16 15 96 5 cfortran.h:539 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 term_char+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 96 16 17 5 cfortran.h:539 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 D.2890+0 S4 A8])
        (reg:SI 0 ax)) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 17 96 18 5 cfortran.h:539 (set (pc)
        (label_ref 77)) 380 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(barrier 18 17 19)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 19 18 20 6 49 "" [1 uses])

(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 21 20 22 6 ("cfortran.h") 540)

(insn 22 21 23 6 cfortran.h:540 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 20 [0x14])) [0 num_term+0 S4 A32])
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 23 22 25 6 cfortran.h:540 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 25 23 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 7 cfortran.h:540 (set (reg:SI 0 ax [orig:66 elem_len ] [66])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 elem_len+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 27 26 28 7 cfortran.h:540 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 num_term+0 S4 A32])
        (reg:SI 0 ax [orig:66 elem_len ] [66])) 34 {*movsi_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 28 27 29 8 51 "" [1 uses])

(note 29 28 30 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 30 29 31 8 ("cfortran.h") 541)

(insn 31 30 32 8 cfortran.h:541 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 num+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 32 31 33 9 53 "" [1 uses])

(note 33 32 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 9 ("cfortran.h") 542)

(insn 35 34 36 9 cfortran.h:542 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 36 35 37 9 cfortran.h:542 (set (pc)
        (label_ref 42)) 380 {jump} (nil)
    (nil))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 37 36 38)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 38 37 39 10 55 "" [1 uses])

(note 39 38 40 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 10 cfortran.h:542 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 41 40 42 10 cfortran.h:542 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 8 [0x8])) [0 strv+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 strv+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 42 41 43 11 54 "" [1 uses])

(note 43 42 44 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 11 cfortran.h:542 (set (reg:SI 0 ax [orig:63 num_term.6 ] [63])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 num_term+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 45 44 46 11 cfortran.h:542 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:63 num_term.6 ] [63])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -4 [0xfffffffc])) [0 i+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 46 45 48 11 cfortran.h:542 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 48 46 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 12 cfortran.h:542 (set (reg/f:SI 0 ax [orig:67 strv ] [67])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 strv+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 50 49 51 12 cfortran.h:542 (set (reg:QI 0 ax [orig:62 D.2892 ] [62])
        (mem:QI (reg/f:SI 0 ax [orig:67 strv ] [67]) [0 S1 A8])) 43 {*movqi_1} (nil)
    (nil))

(insn 51 50 52 12 cfortran.h:542 (set (reg:SI 0 ax [orig:61 D.2893 ] [61])
        (sign_extend:SI (reg:QI 0 ax [orig:62 D.2892 ] [62]))) 83 {extendqisi2} (nil)
    (nil))

(insn 52 51 53 12 cfortran.h:542 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.2893 ] [61])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 term_char+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 53 52 54 12 cfortran.h:542 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 54 53 55 13 56 "" [1 uses])

(note 55 54 56 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 13 ("cfortran.h") 543)

(insn 57 56 58 13 cfortran.h:543 (set (reg:SI 0 ax [orig:60 num_term.7 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 20 [0x14])) [0 num_term+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 58 57 59 13 cfortran.h:543 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:60 num_term.7 ] [60])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -4 [0xfffffffc])) [0 i+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 59 58 61 13 cfortran.h:543 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 61 59 62 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 62 61 63 14 ("cfortran.h") 544)

(insn 63 62 64 14 cfortran.h:544 (set (reg:SI 1 dx [orig:68 i ] [68])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 64 63 65 14 cfortran.h:544 (set (reg:SI 0 ax [orig:69 elem_len ] [69])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 elem_len+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 65 64 67 14 cfortran.h:544 (parallel [
            (set (reg:SI 0 ax [orig:59 D.2895 ] [59])
                (minus:SI (reg:SI 0 ax [orig:69 elem_len ] [69])
                    (reg:SI 1 dx [orig:68 i ] [68])))
            (clobber (reg:CC 17 flags))
        ]) 172 {*subsi_1} (nil)
    (expr_list:REG_EQUAL (minus:SI (mem/c/i:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [0 elem_len+0 S4 A32])
            (mem/c/i:SI (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffc])) [0 i+0 S4 A32]))
        (nil)))

(insn 67 65 68 14 cfortran.h:544 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int 8 [0x8])) [0 strv+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 strv+0 S4 A32])
                    (reg:SI 0 ax [orig:58 D.2896 ] [58])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(note 68 67 69 14 ("cfortran.h") 541)

(insn 69 68 70 14 cfortran.h:541 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -8 [0xfffffff8])) [0 num+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -8 [0xfffffff8])) [0 num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(note 70 69 71 14 ("cfortran.h") 545)

(jump_insn 71 70 72 14 cfortran.h:545 (set (pc)
        (label_ref 32)) 380 {jump} (nil)
    (nil))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 72 71 73)

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 73 72 74 15 58 "" [1 uses])

(note 74 73 75 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 75 74 76 15 ("cfortran.h") 546)

(insn 76 75 97 15 cfortran.h:546 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 num+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 97 76 77 15 cfortran.h:546 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 D.2890+0 S4 A8])
        (reg:SI 0 ax)) 34 {*movsi_1} (nil)
    (nil))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(code_label 77 97 78 16 50 "" [1 uses])

(note 78 77 79 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 82 16 cfortran.h:546 (set (reg:SI 0 ax [orig:65 <result> ] [65])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 D.2890+0 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(note 82 79 83 16 NOTE_INSN_FUNCTION_END)

(note 83 82 91 16 ("cfortran.h") 547)

(insn 91 83 95 16 cfortran.h:547 (use (reg/i:SI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 16, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 95 91 0 NOTE_INSN_DELETED)


;; Function util_cray2ieee_ (util_cray2ieee_)

;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  

;; Hard regs used:  0 6 7

(note 1 0 3 ("util_convert.c") 31)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 31)

(insn 7 6 8 3 util_convert.c:31 (set (reg/f:SI 0 ax [orig:59 A3 ] [59])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 A3+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:31 (set (reg:SI 0 ax [orig:58 D.2913 ] [58])
        (mem:SI (reg/f:SI 0 ax [orig:59 A3 ] [59]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 3 util_convert.c:31 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 0 ax [orig:58 D.2913 ] [58])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 3 util_convert.c:31 (set (reg/f:SI 0 ax [orig:60 A2 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 A2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 3 util_convert.c:31 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 A2 ] [60])) 34 {*movsi_1} (nil)
    (nil))

(insn 12 11 13 3 util_convert.c:31 (set (reg/f:SI 0 ax [orig:61 A1 ] [61])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 A1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 13 12 14 3 util_convert.c:31 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:61 A1 ] [61])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 14 13 15 3 util_convert.c:31 (call (mem:QI (symbol_ref:SI ("cf_util_cray2ieee") [flags 0x41] <function_decl 0x40383380 cf_util_cray2ieee>) [0 S1 A8])
        (const_int 12 [0xc])) 385 {*call_0} (nil)
    (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 15 14 24 NOTE_INSN_FUNCTION_END)

(note 24 15 0 NOTE_INSN_DELETED)


;; Function util_ieee2cray_ (util_ieee2cray_)

;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  

;; Hard regs used:  0 6 7

(note 1 0 3 ("util_convert.c") 35)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 35)

(insn 7 6 8 3 util_convert.c:35 (set (reg/f:SI 0 ax [orig:59 A3 ] [59])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 A3+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:35 (set (reg:SI 0 ax [orig:58 D.2924 ] [58])
        (mem:SI (reg/f:SI 0 ax [orig:59 A3 ] [59]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 3 util_convert.c:35 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 0 ax [orig:58 D.2924 ] [58])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 3 util_convert.c:35 (set (reg/f:SI 0 ax [orig:60 A2 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 A2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 3 util_convert.c:35 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 A2 ] [60])) 34 {*movsi_1} (nil)
    (nil))

(insn 12 11 13 3 util_convert.c:35 (set (reg/f:SI 0 ax [orig:61 A1 ] [61])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 A1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 13 12 14 3 util_convert.c:35 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:61 A1 ] [61])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 14 13 15 3 util_convert.c:35 (call (mem:QI (symbol_ref:SI ("cf_util_ieee2cray") [flags 0x41] <function_decl 0x40383460 cf_util_ieee2cray>) [0 S1 A8])
        (const_int 12 [0xc])) 385 {*call_0} (nil)
    (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 15 14 24 NOTE_INSN_FUNCTION_END)

(note 24 15 0 NOTE_INSN_DELETED)


;; Function util_i8toi4_ (util_i8toi4_)

;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  

;; Hard regs used:  0 6 7

(note 1 0 3 ("util_convert.c") 39)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 39)

(insn 7 6 8 3 util_convert.c:39 (set (reg/f:SI 0 ax [orig:59 A3 ] [59])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 A3+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:39 (set (reg:SI 0 ax [orig:58 D.2935 ] [58])
        (mem:SI (reg/f:SI 0 ax [orig:59 A3 ] [59]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 3 util_convert.c:39 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 0 ax [orig:58 D.2935 ] [58])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 3 util_convert.c:39 (set (reg/f:SI 0 ax [orig:60 A2 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 A2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 3 util_convert.c:39 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 A2 ] [60])) 34 {*movsi_1} (nil)
    (nil))

(insn 12 11 13 3 util_convert.c:39 (set (reg/f:SI 0 ax [orig:61 A1 ] [61])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 A1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 13 12 14 3 util_convert.c:39 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:61 A1 ] [61])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 14 13 15 3 util_convert.c:39 (call (mem:QI (symbol_ref:SI ("cf_util_i8toi4") [flags 0x41] <function_decl 0x40383540 cf_util_i8toi4>) [0 S1 A8])
        (const_int 12 [0xc])) 385 {*call_0} (nil)
    (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 15 14 24 NOTE_INSN_FUNCTION_END)

(note 24 15 0 NOTE_INSN_DELETED)


;; Function util_i4toi8_ (util_i4toi8_)

;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  

;; Hard regs used:  0 6 7

(note 1 0 3 ("util_convert.c") 43)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 43)

(insn 7 6 8 3 util_convert.c:43 (set (reg/f:SI 0 ax [orig:59 A3 ] [59])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 16 [0x10])) [0 A3+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:43 (set (reg:SI 0 ax [orig:58 D.2946 ] [58])
        (mem:SI (reg/f:SI 0 ax [orig:59 A3 ] [59]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 9 8 10 3 util_convert.c:43 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 0 ax [orig:58 D.2946 ] [58])) 34 {*movsi_1} (nil)
    (nil))

(insn 10 9 11 3 util_convert.c:43 (set (reg/f:SI 0 ax [orig:60 A2 ] [60])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 A2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 3 util_convert.c:43 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 0 ax [orig:60 A2 ] [60])) 34 {*movsi_1} (nil)
    (nil))

(insn 12 11 13 3 util_convert.c:43 (set (reg/f:SI 0 ax [orig:61 A1 ] [61])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 A1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 13 12 14 3 util_convert.c:43 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [orig:61 A1 ] [61])) 34 {*movsi_1} (nil)
    (nil))

(call_insn 14 13 15 3 util_convert.c:43 (call (mem:QI (symbol_ref:SI ("cf_util_i4toi8") [flags 0x41] <function_decl 0x40383620 cf_util_i4toi8>) [0 S1 A8])
        (const_int 12 [0xc])) 385 {*call_0} (nil)
    (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 15 14 24 NOTE_INSN_FUNCTION_END)

(note 24 15 0 NOTE_INSN_DELETED)


;; Function cf_util_cray2ieee (cf_util_cray2ieee)

Spilling for insn 36.
Using reg 1 for reload 0
Spilling for insn 42.
Spilling for insn 43.
Spilling for insn 51.
Spilling for insn 52.
Spilling for insn 53.
Spilling for insn 60.
Spilling for insn 61.
Spilling for insn 70.
Spilling for insn 71.
Spilling for insn 74.
Spilling for insn 75.
Spilling for insn 78.
Using reg 2 for reload 0
Spilling for insn 100.
Spilling for insn 101.
Spilling for insn 102.
Spilling for insn 107.
Using reg 2 for reload 0
Spilling for insn 108.
Using reg 0 for reload 0
Spilling for insn 110.
Using reg 0 for reload 0
Spilling for insn 112.
Using reg 0 for reload 0

Reloads for insn # 36
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -84 [0xffffffac])) [0 ieeef+0 S4 A32])
	reload_out (SI) = (reg:SI 102 [ D.2972 ])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -84 [0xffffffac])) [0 ieeef+0 S4 A32])
	reload_out_reg: (reg:SI 102 [ D.2972 ])
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 42
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -64 [0xffffffc0])) [0 mask1+0 S4 A32])
	reload_out (SI) = (reg:SI 2 cx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -64 [0xffffffc0])) [0 mask1+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 2 cx [orig:96 D.2978 ] [96]) 0)
	reload_reg_rtx: (reg:SI 2 cx)

Reloads for insn # 43
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -60 [0xffffffc4])) [0 mask1+4 S4 A32])
	reload_out (SI) = (reg:SI 3 bx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -60 [0xffffffc4])) [0 mask1+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 2 cx [orig:96 D.2978 ] [96]) 4)
	reload_reg_rtx: (reg:SI 3 bx)

Reloads for insn # 51
Reload 0: reload_in (DI) = (reg:DI 0 ax [orig:91 D.2983 ] [91])
	reload_out (DI) = (reg:DI 4 si [orig:90 D.2984 ] [90])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:DI 0 ax [orig:91 D.2983 ] [91])
	reload_out_reg: (reg:DI 4 si [orig:90 D.2984 ] [90])
	reload_reg_rtx: (reg:DI 4 si [orig:90 D.2984 ] [90])

Reloads for insn # 52
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -56 [0xffffffc8])) [0 mask2+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -56 [0xffffffc8])) [0 mask2+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:89 D.2985 ] [89]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 53
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -52 [0xffffffcc])) [0 mask2+4 S4 A32])
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -52 [0xffffffcc])) [0 mask2+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:89 D.2985 ] [89]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 60
Reload 0: reload_in (SI) = (reg:SI 2 cx)
	reload_out (SI) = (reg:SI 4 si)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 2 cx [orig:96 D.2978 ] [96]) 0)
	reload_out_reg: (subreg:SI (reg:DI 4 si [orig:84 D.2990 ] [84]) 0)
	reload_reg_rtx: (reg:SI 4 si)

Reloads for insn # 61
Reload 0: reload_in (SI) = (reg:SI 3 bx)
	reload_out (SI) = (reg:SI 5 di)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 2 cx [orig:96 D.2978 ] [96]) 4)
	reload_out_reg: (subreg:SI (reg:DI 4 si [orig:84 D.2990 ] [84]) 4)
	reload_reg_rtx: (reg:SI 5 di)

Reloads for insn # 70
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -48 [0xffffffd0])) [0 mask3+0 S4 A32])
	reload_out (SI) = (reg:SI 2 cx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -48 [0xffffffd0])) [0 mask3+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 2 cx [orig:77 D.2997 ] [77]) 0)
	reload_reg_rtx: (reg:SI 2 cx)

Reloads for insn # 71
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -44 [0xffffffd4])) [0 mask3+4 S4 A32])
	reload_out (SI) = (reg:SI 3 bx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -44 [0xffffffd4])) [0 mask3+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 2 cx [orig:77 D.2997 ] [77]) 4)
	reload_reg_rtx: (reg:SI 3 bx)

Reloads for insn # 74
Reload 0: reload_in (SI) = (reg:SI 4 si)
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 4 si [orig:84 D.2990 ] [84]) 0)
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:76 D.2998 ] [76]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 75
Reload 0: reload_in (SI) = (reg:SI 5 di)
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 4 si [orig:84 D.2990 ] [84]) 4)
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:76 D.2998 ] [76]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 78
Reload 0: reload_in (SI) = (reg:SI 102 [ D.2972 ])
	GENERAL_REGS, RELOAD_FOR_OPERAND_ADDRESS (opnum = 0)
	reload_in_reg: (reg:SI 102 [ D.2972 ])
	reload_reg_rtx: (reg:SI 2 cx)

Reloads for insn # 100
Reload 0: reload_in (DI) = (reg:DI 0 ax [orig:67 D.3007 ] [67])
	reload_out (DI) = (reg:DI 2 cx [orig:66 D.3008 ] [66])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:DI 0 ax [orig:67 D.3007 ] [67])
	reload_out_reg: (reg:DI 2 cx [orig:66 D.3008 ] [66])
	reload_reg_rtx: (reg:DI 2 cx [orig:66 D.3008 ] [66])

Reloads for insn # 101
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -56 [0xffffffc8])) [0 mask2+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -56 [0xffffffc8])) [0 mask2+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:65 D.3009 ] [65]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 102
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -52 [0xffffffcc])) [0 mask2+4 S4 A32])
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -52 [0xffffffcc])) [0 mask2+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:65 D.3009 ] [65]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 107
Reload 0: reload_in (DI) = (reg:DI 0 ax [orig:63 D.3011 ] [63])
	reload_out (DI) = (reg:DI 62 [ D.3012 ])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:DI 0 ax [orig:63 D.3011 ] [63])
	reload_out_reg: (reg:DI 62 [ D.3012 ])
	reload_reg_rtx: (reg:DI 2 cx)

Reloads for insn # 108
Reload 0: reload_in (SI) = (subreg:SI (reg:DI 62 [ D.3012 ]) 4)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 0)
	reload_in_reg: (subreg:SI (reg:DI 62 [ D.3012 ]) 4)
	reload_reg_rtx: (reg:SI 3 bx)

Reloads for insn # 110
Reload 0: reload_in (SI) = (subreg:SI (reg:DI 62 [ D.3012 ]) 4)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 0)
	reload_in_reg: (subreg:SI (reg:DI 62 [ D.3012 ]) 4)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 112
Reload 0: reload_in (SI) = (subreg:SI (reg:DI 62 [ D.3012 ]) 0)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 0)
	reload_in_reg: (subreg:SI (reg:DI 62 [ D.3012 ]) 0)
	reload_reg_rtx: (reg:SI 1 dx)
;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  63 in 0  64 in 0  
65 in 0  66 in 2  67 in 0  68 in 0  69 in 0  70 in 0  
71 in 0  76 in 0  77 in 2  78 in 0  79 in 0  80 in 0  
81 in 0  82 in 0  83 in 0  84 in 4  85 in 0  86 in 0  
87 in 0  88 in 0  89 in 0  90 in 4  91 in 0  92 in 0  
93 in 0  94 in 0  95 in 0  96 in 2  97 in 0  98 in 0  
99 in 0  100 in 0  101 in 0  103 in 0  104 in 0  105 in 0  
106 in 0  107 in 0  108 in 0  109 in 0  

;; Hard regs used:  0 1 2 3 4 5 6 17

(note 1 0 3 ("util_convert.c") 74)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 75)

(insn 7 6 8 3 util_convert.c:75 (set (reg/f:SI 0 ax [orig:106 dcrayf ] [106])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 dcrayf+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:75 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -88 [0xffffffa8])) [0 crayf+0 S4 A32])
        (reg/f:SI 0 ax [orig:106 dcrayf ] [106])) 34 {*movsi_1} (nil)
    (nil))

(note 9 8 10 3 ("util_convert.c") 76)

(insn 10 9 11 3 util_convert.c:76 (set (reg/f:SI 0 ax [orig:107 dieeef ] [107])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 dieeef+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 3 util_convert.c:76 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -84 [0xffffffac])) [0 ieeef+0 S4 A32])
        (reg/f:SI 0 ax [orig:107 dieeef ] [107])) 34 {*movsi_1} (nil)
    (nil))

(note 12 11 13 3 ("util_convert.c") 78)

(insn 13 12 14 3 util_convert.c:78 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -80 [0xffffffb0])) [0 cray_expbias+0 S8 A32])
        (const_int 16384 [0x4000])) 56 {*movdi_2} (nil)
    (nil))

(note 14 13 15 3 ("util_convert.c") 79)

(insn 15 14 16 3 util_convert.c:79 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffb8])) [0 ieee_expbias+0 S8 A32])
        (const_int 1023 [0x3ff])) 56 {*movdi_2} (nil)
    (nil))

(note 16 15 17 3 ("util_convert.c") 83)

(insn 17 16 18 3 util_convert.c:83 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffc0])) [0 mask1+0 S8 A32])
        (const_double 0 [0x0] -2147483648 [0x80000000] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 18 17 19 3 ("util_convert.c") 85)

(insn 19 18 20 3 util_convert.c:85 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffc8])) [0 mask2+0 S8 A32])
        (const_int 32767 [0x7fff])) 56 {*movdi_2} (nil)
    (nil))

(note 20 19 21 3 ("util_convert.c") 89)

(insn 21 20 22 3 util_convert.c:89 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffd0])) [0 mask3+0 S8 A32])
        (const_double -1 [0xffffffff] 1048575 [0xfffff] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 22 21 23 3 ("util_convert.c") 91)

(insn 23 22 24 3 util_convert.c:91 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -40 [0xffffffd8])) [0 mask4+0 S8 A32])
        (const_int 2047 [0x7ff])) 56 {*movdi_2} (nil)
    (nil))

(note 24 23 25 3 ("util_convert.c") 95)

(insn 25 24 26 3 util_convert.c:95 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -32 [0xffffffe0])) [0 indef+0 S8 A32])
        (const_double 0 [0x0] -524288 [0xfff80000] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 26 25 27 3 ("util_convert.c") 101)

(insn 27 26 28 3 util_convert.c:101 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 28 27 29 3 util_convert.c:101 (set (pc)
        (label_ref 81)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 29 28 30)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 30 29 31 4 71 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 32 31 33 4 ("util_convert.c") 102)

(insn 33 32 34 4 util_convert.c:102 (set (reg:SI 0 ax [orig:105 i.8 ] [105])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 34 33 147 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:104 D.2970 ] [104])
                (ashift:SI (reg:SI 0 ax [orig:105 i.8 ] [105])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 147 34 36 4 util_convert.c:102 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -84 [0xffffffac])) [0 ieeef+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 36 147 148 4 util_convert.c:102 (parallel [
            (set (reg:SI 1 dx)
                (plus:SI (reg:SI 1 dx)
                    (reg:SI 0 ax [orig:103 D.2971 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 148 36 37 4 util_convert.c:102 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -108 [0xffffff94])) [0 D.2972+0 S4 A8])
        (reg:SI 1 dx)) 34 {*movsi_1} (nil)
    (nil))

(insn 37 148 38 4 util_convert.c:102 (set (reg:SI 0 ax [orig:101 i.9 ] [101])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 38 37 40 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:100 D.2974 ] [100])
                (ashift:SI (reg:SI 0 ax [orig:101 i.9 ] [101])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 40 38 41 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:98 D.2976 ] [98])
                (plus:SI (reg:SI 0 ax [orig:99 D.2975 ] [99])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -88 [0xffffffa8])) [0 crayf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 41 40 149 4 util_convert.c:102 (set (reg:DI 0 ax [orig:97 D.2977 ] [97])
        (mem:DI (reg:SI 0 ax [orig:98 D.2976 ] [98]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 149 41 42 4 util_convert.c:102 (set (reg:SI 2 cx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffc0])) [0 mask1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 42 149 151 4 util_convert.c:102 (parallel [
            (set (reg:SI 2 cx)
                (and:SI (reg:SI 2 cx)
                    (reg:SI 0 ax [orig:97 D.2977 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:97 D.2977 ] [97])
        (nil)))

(insn 151 42 43 4 util_convert.c:102 (set (reg:SI 3 bx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffc4])) [0 mask1+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 43 151 46 4 util_convert.c:102 (parallel [
            (set (reg:SI 3 bx)
                (and:SI (reg:SI 3 bx)
                    (reg:SI 1 dx [ D.2977+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:97 D.2977 ] [97])
        (nil)))

(insn 46 43 47 4 util_convert.c:102 (set (reg:SI 0 ax [orig:95 i.10 ] [95])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 47 46 49 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:94 D.2980 ] [94])
                (ashift:SI (reg:SI 0 ax [orig:95 i.10 ] [95])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 49 47 50 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:92 D.2982 ] [92])
                (plus:SI (reg:SI 0 ax [orig:93 D.2981 ] [93])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -88 [0xffffffa8])) [0 crayf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 50 49 153 4 util_convert.c:102 (set (reg:DI 0 ax [orig:91 D.2983 ] [91])
        (mem:DI (reg:SI 0 ax [orig:92 D.2982 ] [92]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 153 50 51 4 util_convert.c:102 (set (reg:DI 4 si [orig:90 D.2984 ] [90])
        (reg:DI 0 ax [orig:91 D.2983 ] [91])) 56 {*movdi_2} (nil)
    (nil))

(insn 51 153 154 4 util_convert.c:102 (parallel [
            (set (reg:DI 4 si [orig:90 D.2984 ] [90])
                (lshiftrt:DI (reg:DI 4 si [orig:90 D.2984 ] [90])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 322 {*lshrdi3_1} (nil)
    (nil))

(insn 154 51 52 4 util_convert.c:102 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffc8])) [0 mask2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 52 154 156 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax)
                (and:SI (reg:SI 0 ax)
                    (reg:SI 4 si [orig:90 D.2984 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:90 D.2984 ] [90])
        (nil)))

(insn 156 52 53 4 util_convert.c:102 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffcc])) [0 mask2+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 53 156 56 4 util_convert.c:102 (parallel [
            (set (reg:SI 1 dx)
                (and:SI (reg:SI 1 dx)
                    (reg:SI 5 di [ D.2984+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:90 D.2984 ] [90])
        (nil)))

(insn 56 53 57 4 util_convert.c:102 (parallel [
            (set (reg:DI 0 ax [orig:88 D.2986 ] [88])
                (minus:DI (reg:DI 0 ax [orig:89 D.2985 ] [89])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -80 [0xffffffb0])) [0 cray_expbias+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 168 {*subdi3_1} (nil)
    (nil))

(insn 57 56 58 4 util_convert.c:102 (parallel [
            (set (reg:DI 0 ax [orig:87 D.2987 ] [87])
                (plus:DI (reg:DI 0 ax [orig:88 D.2986 ] [88])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -72 [0xffffffb8])) [0 ieee_expbias+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 58 57 59 4 util_convert.c:102 (parallel [
            (set (reg:DI 0 ax [orig:86 D.2988 ] [86])
                (plus:DI (reg:DI 0 ax [orig:87 D.2987 ] [87])
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 59 58 158 4 util_convert.c:102 (parallel [
            (set (reg:DI 0 ax [orig:85 D.2989 ] [85])
                (ashift:DI (reg:DI 0 ax [orig:86 D.2988 ] [86])
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*ashldi3_1} (nil)
    (nil))

(insn 158 59 60 4 util_convert.c:102 (set (reg:SI 4 si)
        (reg:SI 2 cx)) 34 {*movsi_1} (nil)
    (nil))

(insn 60 158 160 4 util_convert.c:102 (parallel [
            (set (reg:SI 4 si)
                (ior:SI (reg:SI 4 si)
                    (reg:SI 0 ax [orig:85 D.2989 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:96 D.2978 ] [96])
        (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:85 D.2989 ] [85])
            (nil))))

(insn 160 60 61 4 util_convert.c:102 (set (reg:SI 5 di)
        (reg:SI 3 bx)) 34 {*movsi_1} (nil)
    (nil))

(insn 61 160 64 4 util_convert.c:102 (parallel [
            (set (reg:SI 5 di)
                (ior:SI (reg:SI 5 di)
                    (reg:SI 1 dx [ D.2989+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:96 D.2978 ] [96])
        (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:85 D.2989 ] [85])
            (nil))))

(insn 64 61 65 4 util_convert.c:102 (set (reg:SI 0 ax [orig:83 i.11 ] [83])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 65 64 67 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:82 D.2992 ] [82])
                (ashift:SI (reg:SI 0 ax [orig:83 i.11 ] [83])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 67 65 68 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax [orig:80 D.2994 ] [80])
                (plus:SI (reg:SI 0 ax [orig:81 D.2993 ] [81])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -88 [0xffffffa8])) [0 crayf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 68 67 69 4 util_convert.c:102 (set (reg:DI 0 ax [orig:79 D.2995 ] [79])
        (mem:DI (reg:SI 0 ax [orig:80 D.2994 ] [80]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 69 68 162 4 util_convert.c:102 (parallel [
            (set (reg:DI 0 ax [orig:78 D.2996 ] [78])
                (ashift:DI (reg:DI 0 ax [orig:79 D.2995 ] [79])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*ashldi3_1} (nil)
    (nil))

(insn 162 69 70 4 util_convert.c:102 (set (reg:SI 2 cx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffd0])) [0 mask3+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 70 162 164 4 util_convert.c:102 (parallel [
            (set (reg:SI 2 cx)
                (and:SI (reg:SI 2 cx)
                    (reg:SI 0 ax [orig:78 D.2996 ] [78])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:78 D.2996 ] [78])
        (nil)))

(insn 164 70 71 4 util_convert.c:102 (set (reg:SI 3 bx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -44 [0xffffffd4])) [0 mask3+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 71 164 166 4 util_convert.c:102 (parallel [
            (set (reg:SI 3 bx)
                (and:SI (reg:SI 3 bx)
                    (reg:SI 1 dx [ D.2996+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:78 D.2996 ] [78])
        (nil)))

(insn 166 71 74 4 util_convert.c:102 (set (reg:SI 0 ax)
        (reg:SI 4 si)) 34 {*movsi_1} (nil)
    (nil))

(insn 74 166 168 4 util_convert.c:102 (parallel [
            (set (reg:SI 0 ax)
                (ior:SI (reg:SI 0 ax)
                    (reg:SI 2 cx [orig:77 D.2997 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:84 D.2990 ] [84])
        (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:77 D.2997 ] [77])
            (nil))))

(insn 168 74 75 4 util_convert.c:102 (set (reg:SI 1 dx)
        (reg:SI 5 di)) 34 {*movsi_1} (nil)
    (nil))

(insn 75 168 170 4 util_convert.c:102 (parallel [
            (set (reg:SI 1 dx)
                (ior:SI (reg:SI 1 dx)
                    (reg:SI 3 bx [ D.2997+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:84 D.2990 ] [84])
        (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:77 D.2997 ] [77])
            (nil))))

(insn 170 75 78 4 util_convert.c:102 (set (reg:SI 2 cx)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -108 [0xffffff94])) [0 D.2972+0 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 78 170 79 4 util_convert.c:102 (set (mem:DI (reg:SI 2 cx) [0 S8 A64])
        (reg:DI 0 ax [orig:76 D.2998 ] [76])) 56 {*movdi_2} (nil)
    (nil))

(note 79 78 80 4 ("util_convert.c") 101)

(insn 80 79 81 4 util_convert.c:101 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 81 80 82 5 70 "" [1 uses])

(note 82 81 83 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 5 util_convert.c:101 (set (reg:SI 0 ax [orig:108 i ] [108])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 84 83 85 5 util_convert.c:101 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:108 i ] [108])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 nf+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 85 84 87 5 util_convert.c:101 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 87 85 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 88 87 89 6 ("util_convert.c") 122)

(insn 89 88 90 6 util_convert.c:122 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 90 89 91 6 util_convert.c:122 (set (pc)
        (label_ref 127)) 380 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 91 90 92)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 92 91 93 7 74 "" [1 uses])

(note 93 92 94 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 94 93 95 7 ("util_convert.c") 125)

(insn 95 94 96 7 util_convert.c:125 (set (reg:SI 0 ax [orig:71 i.13 ] [71])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 96 95 98 7 util_convert.c:125 (parallel [
            (set (reg:SI 0 ax [orig:70 D.3004 ] [70])
                (ashift:SI (reg:SI 0 ax [orig:71 i.13 ] [71])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 98 96 99 7 util_convert.c:125 (parallel [
            (set (reg:SI 0 ax [orig:68 D.3006 ] [68])
                (plus:SI (reg:SI 0 ax [orig:69 D.3005 ] [69])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -88 [0xffffffa8])) [0 crayf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 99 98 171 7 util_convert.c:125 (set (reg:DI 0 ax [orig:67 D.3007 ] [67])
        (mem:DI (reg:SI 0 ax [orig:68 D.3006 ] [68]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 171 99 100 7 util_convert.c:125 (set (reg:DI 2 cx [orig:66 D.3008 ] [66])
        (reg:DI 0 ax [orig:67 D.3007 ] [67])) 56 {*movdi_2} (nil)
    (nil))

(insn 100 171 172 7 util_convert.c:125 (parallel [
            (set (reg:DI 2 cx [orig:66 D.3008 ] [66])
                (lshiftrt:DI (reg:DI 2 cx [orig:66 D.3008 ] [66])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 322 {*lshrdi3_1} (nil)
    (nil))

(insn 172 100 101 7 util_convert.c:125 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffc8])) [0 mask2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 101 172 174 7 util_convert.c:125 (parallel [
            (set (reg:SI 0 ax)
                (and:SI (reg:SI 0 ax)
                    (reg:SI 2 cx [orig:66 D.3008 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:66 D.3008 ] [66])
        (nil)))

(insn 174 101 102 7 util_convert.c:125 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffcc])) [0 mask2+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 102 174 105 7 util_convert.c:125 (parallel [
            (set (reg:SI 1 dx)
                (and:SI (reg:SI 1 dx)
                    (reg:SI 3 bx [ D.3008+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:66 D.3008 ] [66])
        (nil)))

(insn 105 102 106 7 util_convert.c:125 (parallel [
            (set (reg:DI 0 ax [orig:64 D.3010 ] [64])
                (minus:DI (reg:DI 0 ax [orig:65 D.3009 ] [65])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -80 [0xffffffb0])) [0 cray_expbias+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 168 {*subdi3_1} (nil)
    (nil))

(insn 106 105 176 7 util_convert.c:125 (parallel [
            (set (reg:DI 0 ax [orig:63 D.3011 ] [63])
                (plus:DI (reg:DI 0 ax [orig:64 D.3010 ] [64])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -72 [0xffffffb8])) [0 ieee_expbias+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 176 106 107 7 util_convert.c:125 (set (reg:DI 2 cx)
        (reg:DI 0 ax [orig:63 D.3011 ] [63])) 56 {*movdi_2} (nil)
    (nil))

(insn 107 176 177 7 util_convert.c:125 (parallel [
            (set (reg:DI 2 cx)
                (plus:DI (reg:DI 2 cx)
                    (const_int -1 [0xffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 177 107 178 7 util_convert.c:125 (set (mem/c:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -104 [0xffffff98])) [0 D.3012+0 S8 A8])
        (reg:DI 2 cx)) 56 {*movdi_2} (nil)
    (nil))

(insn 178 177 108 7 util_convert.c:125 (set (reg:SI 3 bx)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -100 [0xffffff9c])) [0 D.3012+4 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 108 178 109 7 util_convert.c:125 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 3 bx)
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -36 [0xffffffdc])) [0 mask4+4 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 109 108 141 7 util_convert.c:125 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note 141 109 179 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 179 141 110 8 util_convert.c:125 (set (reg:SI 0 ax)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -100 [0xffffff9c])) [0 D.3012+4 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 110 179 111 8 util_convert.c:125 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax)
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -36 [0xffffffdc])) [0 mask4+4 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 111 110 142 8 util_convert.c:125 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:SI 115)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note 142 111 180 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 180 142 112 9 util_convert.c:125 (set (reg:SI 1 dx)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -104 [0xffffff98])) [0 D.3012+0 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 112 180 113 9 util_convert.c:125 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx)
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -40 [0xffffffd8])) [0 mask4+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 113 112 115 9 util_convert.c:125 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 115 113 116 11 77 "" [1 uses])

(note 116 115 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 117 116 118 11 ("util_convert.c") 128)

(insn 118 117 119 11 util_convert.c:128 (set (reg:SI 0 ax [orig:61 i.14 ] [61])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 119 118 121 11 util_convert.c:128 (parallel [
            (set (reg:SI 0 ax [orig:60 D.3014 ] [60])
                (ashift:SI (reg:SI 0 ax [orig:61 i.14 ] [61])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 121 119 122 11 util_convert.c:128 (parallel [
            (set (reg:SI 0 ax [orig:58 D.3016 ] [58])
                (plus:SI (reg:SI 0 ax [orig:59 D.3015 ] [59])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -84 [0xffffffac])) [0 ieeef+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 122 121 123 11 util_convert.c:128 (set (mem:DI (reg:SI 0 ax [orig:58 D.3016 ] [58]) [0 S8 A64])
        (const_int 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 123 122 124 12 75 "" [2 uses])

(note 124 123 125 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 125 124 126 12 ("util_convert.c") 122)

(insn 126 125 127 12 util_convert.c:122 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 127 126 128 13 73 "" [1 uses])

(note 128 127 129 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 130 13 util_convert.c:122 (set (reg:SI 0 ax [orig:109 i ] [109])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 130 129 131 13 util_convert.c:122 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:109 i ] [109])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 nf+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 131 130 134 13 util_convert.c:122 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 134 131 135 NOTE_INSN_FUNCTION_END)

(note 135 134 146 ("util_convert.c") 134)

(note 146 135 0 NOTE_INSN_DELETED)


;; Function cf_util_ieee2cray (cf_util_ieee2cray)

Spilling for insn 55.
Using reg 1 for reload 0
Spilling for insn 61.
Spilling for insn 62.
Spilling for insn 70.
Spilling for insn 71.
Spilling for insn 72.
Spilling for insn 79.
Spilling for insn 80.
Spilling for insn 88.
Spilling for insn 89.
Spilling for insn 93.
Spilling for insn 94.
Spilling for insn 95.
Spilling for insn 98.
Using reg 2 for reload 0

Reloads for insn # 55
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -80 [0xffffffb0])) [0 crayf+0 S4 A32])
	reload_out (SI) = (reg:SI 85 [ D.3049 ])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -80 [0xffffffb0])) [0 crayf+0 S4 A32])
	reload_out_reg: (reg:SI 85 [ D.3049 ])
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 61
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -48 [0xffffffd0])) [0 mask1+0 S4 A32])
	reload_out (SI) = (reg:SI 4 si)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -48 [0xffffffd0])) [0 mask1+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 4 si [orig:79 D.3055 ] [79]) 0)
	reload_reg_rtx: (reg:SI 4 si)

Reloads for insn # 62
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -44 [0xffffffd4])) [0 mask1+4 S4 A32])
	reload_out (SI) = (reg:SI 5 di)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -44 [0xffffffd4])) [0 mask1+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 4 si [orig:79 D.3055 ] [79]) 4)
	reload_reg_rtx: (reg:SI 5 di)

Reloads for insn # 70
Reload 0: reload_in (DI) = (reg:DI 0 ax [orig:74 D.3060 ] [74])
	reload_out (DI) = (reg:DI 2 cx [orig:73 D.3061 ] [73])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:DI 0 ax [orig:74 D.3060 ] [74])
	reload_out_reg: (reg:DI 2 cx [orig:73 D.3061 ] [73])
	reload_reg_rtx: (reg:DI 2 cx [orig:73 D.3061 ] [73])

Reloads for insn # 71
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -32 [0xffffffe0])) [0 mask4+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -32 [0xffffffe0])) [0 mask4+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:72 D.3062 ] [72]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 72
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -28 [0xffffffe4])) [0 mask4+4 S4 A32])
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -28 [0xffffffe4])) [0 mask4+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:72 D.3062 ] [72]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 79
Reload 0: reload_in (SI) = (reg:SI 4 si)
	reload_out (SI) = (reg:SI 2 cx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 4 si [orig:79 D.3055 ] [79]) 0)
	reload_out_reg: (subreg:SI (reg:DI 2 cx [orig:67 D.3067 ] [67]) 0)
	reload_reg_rtx: (reg:SI 2 cx)

Reloads for insn # 80
Reload 0: reload_in (SI) = (reg:SI 5 di)
	reload_out (SI) = (reg:SI 3 bx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 4 si [orig:79 D.3055 ] [79]) 4)
	reload_out_reg: (subreg:SI (reg:DI 2 cx [orig:67 D.3067 ] [67]) 4)
	reload_reg_rtx: (reg:SI 3 bx)

Reloads for insn # 88
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -40 [0xffffffd8])) [0 mask3+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -40 [0xffffffd8])) [0 mask3+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:61 D.3073 ] [61]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 89
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -36 [0xffffffdc])) [0 mask3+4 S4 A32])
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -36 [0xffffffdc])) [0 mask3+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:61 D.3073 ] [61]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 93
Reload 0: reload_in (DI) = (reg:DI 0 ax [orig:60 D.3074 ] [60])
	reload_out (DI) = (reg:DI 4 si [orig:59 D.3075 ] [59])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:DI 0 ax [orig:60 D.3074 ] [60])
	reload_out_reg: (reg:DI 4 si [orig:59 D.3075 ] [59])
	reload_reg_rtx: (reg:DI 4 si [orig:59 D.3075 ] [59])

Reloads for insn # 94
Reload 0: reload_in (SI) = (reg:SI 2 cx)
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 2 cx [orig:67 D.3067 ] [67]) 0)
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:58 D.3076 ] [58]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 95
Reload 0: reload_in (SI) = (reg:SI 3 bx)
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (subreg:SI (reg:DI 2 cx [orig:67 D.3067 ] [67]) 4)
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:58 D.3076 ] [58]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 98
Reload 0: reload_in (SI) = (reg:SI 85 [ D.3049 ])
	GENERAL_REGS, RELOAD_FOR_OPERAND_ADDRESS (opnum = 0)
	reload_in_reg: (reg:SI 85 [ D.3049 ])
	reload_reg_rtx: (reg:SI 2 cx)
;; Register dispositions:
58 in 0  59 in 4  60 in 0  61 in 0  62 in 4  63 in 0  
64 in 0  65 in 0  66 in 0  67 in 2  68 in 0  69 in 0  
70 in 0  71 in 0  72 in 0  73 in 2  74 in 0  75 in 0  
76 in 0  77 in 0  78 in 0  79 in 4  80 in 0  81 in 0  
82 in 0  83 in 0  84 in 0  86 in 0  87 in 0  88 in 0  
89 in 0  90 in 0  91 in 0  92 in 0  93 in 0  94 in 0  
95 in 0  96 in 0  97 in 0  98 in 0  99 in 0  100 in 0  
101 in 0  

;; Hard regs used:  0 1 2 3 4 5 6 17

(note 1 0 3 ("util_convert.c") 150)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 151)

(insn 7 6 8 3 util_convert.c:151 (set (reg/f:SI 0 ax [orig:98 dcrayf ] [98])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 dcrayf+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:151 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -80 [0xffffffb0])) [0 crayf+0 S4 A32])
        (reg/f:SI 0 ax [orig:98 dcrayf ] [98])) 34 {*movsi_1} (nil)
    (nil))

(note 9 8 10 3 ("util_convert.c") 152)

(insn 10 9 11 3 util_convert.c:152 (set (reg/f:SI 0 ax [orig:99 dieeef ] [99])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 dieeef+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 11 10 12 3 util_convert.c:152 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -76 [0xffffffb4])) [0 ieeef+0 S4 A32])
        (reg/f:SI 0 ax [orig:99 dieeef ] [99])) 34 {*movsi_1} (nil)
    (nil))

(note 12 11 13 3 ("util_convert.c") 154)

(insn 13 12 14 3 util_convert.c:154 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffb8])) [0 cray_expbias+0 S8 A32])
        (const_int 16384 [0x4000])) 56 {*movdi_2} (nil)
    (nil))

(note 14 13 15 3 ("util_convert.c") 155)

(insn 15 14 16 3 util_convert.c:155 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffc0])) [0 ieee_expbias+0 S8 A32])
        (const_int 1023 [0x3ff])) 56 {*movdi_2} (nil)
    (nil))

(note 16 15 17 3 ("util_convert.c") 161)

(insn 17 16 18 3 util_convert.c:161 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffc8])) [0 implied+0 S8 A32])
        (const_double 0 [0x0] 1048576 [0x100000] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 18 17 19 3 ("util_convert.c") 162)

(insn 19 18 20 3 util_convert.c:162 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffd0])) [0 mask1+0 S8 A32])
        (const_double 0 [0x0] -2147483648 [0x80000000] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 20 19 21 3 ("util_convert.c") 163)

(insn 21 20 22 3 util_convert.c:163 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -40 [0xffffffd8])) [0 mask3+0 S8 A32])
        (const_double -1 [0xffffffff] 1048575 [0xfffff] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 22 21 23 3 ("util_convert.c") 165)

(insn 23 22 24 3 util_convert.c:165 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -32 [0xffffffe0])) [0 mask4+0 S8 A32])
        (const_int 2047 [0x7ff])) 56 {*movdi_2} (nil)
    (nil))

(note 24 23 25 3 ("util_convert.c") 171)

(insn 25 24 26 3 util_convert.c:171 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 26 25 27 3 util_convert.c:171 (set (pc)
        (label_ref 103)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 28)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 28 27 29 4 82 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 29 31 4 ("util_convert.c") 172)

(insn 31 30 32 4 util_convert.c:172 (set (reg:SI 0 ax [orig:97 i.15 ] [97])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 32 31 34 4 util_convert.c:172 (parallel [
            (set (reg:SI 0 ax [orig:96 D.3038 ] [96])
                (ashift:SI (reg:SI 0 ax [orig:97 i.15 ] [97])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 34 32 35 4 util_convert.c:172 (parallel [
            (set (reg:SI 0 ax [orig:94 D.3040 ] [94])
                (plus:SI (reg:SI 0 ax [orig:95 D.3039 ] [95])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -76 [0xffffffb4])) [0 ieeef+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 35 34 36 4 util_convert.c:172 (set (reg:DI 0 ax [orig:93 D.3041 ] [93])
        (mem:DI (reg:SI 0 ax [orig:94 D.3040 ] [94]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 36 35 37 4 util_convert.c:172 (parallel [
            (set (reg:SI 0 ax [100])
                (ior:SI (reg:SI 0 ax [orig:93 D.3041 ] [93])
                    (reg:SI 1 dx [ D.3041+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (nil))

(insn 37 36 38 4 util_convert.c:172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [100])
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 38 37 40 4 util_convert.c:172 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 40 38 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 41 40 42 5 ("util_convert.c") 173)

(insn 42 41 43 5 util_convert.c:173 (set (reg:SI 0 ax [orig:92 i.16 ] [92])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 43 42 45 5 util_convert.c:173 (parallel [
            (set (reg:SI 0 ax [orig:91 D.3043 ] [91])
                (ashift:SI (reg:SI 0 ax [orig:92 i.16 ] [92])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 45 43 46 5 util_convert.c:173 (parallel [
            (set (reg:SI 0 ax [orig:89 D.3045 ] [89])
                (plus:SI (reg:SI 0 ax [orig:90 D.3044 ] [90])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -80 [0xffffffb0])) [0 crayf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 46 45 47 5 util_convert.c:173 (set (mem:DI (reg:SI 0 ax [orig:89 D.3045 ] [89]) [0 S8 A64])
        (const_int 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(jump_insn 47 46 48 5 util_convert.c:173 (set (pc)
        (label_ref 99)) 380 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 49)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 49 48 50 6 83 "" [1 uses])

(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 50 52 6 ("util_convert.c") 175)

(insn 52 51 53 6 util_convert.c:175 (set (reg:SI 0 ax [orig:88 i.17 ] [88])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 53 52 120 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:87 D.3047 ] [87])
                (ashift:SI (reg:SI 0 ax [orig:88 i.17 ] [88])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 120 53 55 6 util_convert.c:175 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -80 [0xffffffb0])) [0 crayf+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 55 120 121 6 util_convert.c:175 (parallel [
            (set (reg:SI 1 dx)
                (plus:SI (reg:SI 1 dx)
                    (reg:SI 0 ax [orig:86 D.3048 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 121 55 56 6 util_convert.c:175 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -84 [0xffffffac])) [0 D.3049+0 S4 A8])
        (reg:SI 1 dx)) 34 {*movsi_1} (nil)
    (nil))

(insn 56 121 57 6 util_convert.c:175 (set (reg:SI 0 ax [orig:84 i.18 ] [84])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 57 56 59 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:83 D.3051 ] [83])
                (ashift:SI (reg:SI 0 ax [orig:84 i.18 ] [84])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 59 57 60 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:81 D.3053 ] [81])
                (plus:SI (reg:SI 0 ax [orig:82 D.3052 ] [82])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -76 [0xffffffb4])) [0 ieeef+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 60 59 122 6 util_convert.c:175 (set (reg:DI 0 ax [orig:80 D.3054 ] [80])
        (mem:DI (reg:SI 0 ax [orig:81 D.3053 ] [81]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 122 60 61 6 util_convert.c:175 (set (reg:SI 4 si)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffd0])) [0 mask1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 61 122 124 6 util_convert.c:175 (parallel [
            (set (reg:SI 4 si)
                (and:SI (reg:SI 4 si)
                    (reg:SI 0 ax [orig:80 D.3054 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:80 D.3054 ] [80])
        (nil)))

(insn 124 61 62 6 util_convert.c:175 (set (reg:SI 5 di)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -44 [0xffffffd4])) [0 mask1+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 62 124 65 6 util_convert.c:175 (parallel [
            (set (reg:SI 5 di)
                (and:SI (reg:SI 5 di)
                    (reg:SI 1 dx [ D.3054+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:80 D.3054 ] [80])
        (nil)))

(insn 65 62 66 6 util_convert.c:175 (set (reg:SI 0 ax [orig:78 i.19 ] [78])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 66 65 68 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:77 D.3057 ] [77])
                (ashift:SI (reg:SI 0 ax [orig:78 i.19 ] [78])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 68 66 69 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:75 D.3059 ] [75])
                (plus:SI (reg:SI 0 ax [orig:76 D.3058 ] [76])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -76 [0xffffffb4])) [0 ieeef+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 69 68 126 6 util_convert.c:175 (set (reg:DI 0 ax [orig:74 D.3060 ] [74])
        (mem:DI (reg:SI 0 ax [orig:75 D.3059 ] [75]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 126 69 70 6 util_convert.c:175 (set (reg:DI 2 cx [orig:73 D.3061 ] [73])
        (reg:DI 0 ax [orig:74 D.3060 ] [74])) 56 {*movdi_2} (nil)
    (nil))

(insn 70 126 127 6 util_convert.c:175 (parallel [
            (set (reg:DI 2 cx [orig:73 D.3061 ] [73])
                (lshiftrt:DI (reg:DI 2 cx [orig:73 D.3061 ] [73])
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) 322 {*lshrdi3_1} (nil)
    (nil))

(insn 127 70 71 6 util_convert.c:175 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -32 [0xffffffe0])) [0 mask4+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 71 127 129 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax)
                (and:SI (reg:SI 0 ax)
                    (reg:SI 2 cx [orig:73 D.3061 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:73 D.3061 ] [73])
        (nil)))

(insn 129 71 72 6 util_convert.c:175 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffe4])) [0 mask4+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 72 129 75 6 util_convert.c:175 (parallel [
            (set (reg:SI 1 dx)
                (and:SI (reg:SI 1 dx)
                    (reg:SI 3 bx [ D.3061+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:73 D.3061 ] [73])
        (nil)))

(insn 75 72 76 6 util_convert.c:175 (parallel [
            (set (reg:DI 0 ax [orig:71 D.3063 ] [71])
                (minus:DI (reg:DI 0 ax [orig:72 D.3062 ] [72])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -64 [0xffffffc0])) [0 ieee_expbias+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 168 {*subdi3_1} (nil)
    (nil))

(insn 76 75 77 6 util_convert.c:175 (parallel [
            (set (reg:DI 0 ax [orig:70 D.3064 ] [70])
                (plus:DI (reg:DI 0 ax [orig:71 D.3063 ] [71])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -72 [0xffffffb8])) [0 cray_expbias+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 77 76 78 6 util_convert.c:175 (parallel [
            (set (reg:DI 0 ax [orig:69 D.3065 ] [69])
                (plus:DI (reg:DI 0 ax [orig:70 D.3064 ] [70])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 78 77 131 6 util_convert.c:175 (parallel [
            (set (reg:DI 0 ax [orig:68 D.3066 ] [68])
                (ashift:DI (reg:DI 0 ax [orig:69 D.3065 ] [69])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 286 {*ashldi3_1} (nil)
    (nil))

(insn 131 78 79 6 util_convert.c:175 (set (reg:SI 2 cx)
        (reg:SI 4 si)) 34 {*movsi_1} (nil)
    (nil))

(insn 79 131 133 6 util_convert.c:175 (parallel [
            (set (reg:SI 2 cx)
                (ior:SI (reg:SI 2 cx)
                    (reg:SI 0 ax [orig:68 D.3066 ] [68])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:79 D.3055 ] [79])
        (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:68 D.3066 ] [68])
            (nil))))

(insn 133 79 80 6 util_convert.c:175 (set (reg:SI 3 bx)
        (reg:SI 5 di)) 34 {*movsi_1} (nil)
    (nil))

(insn 80 133 83 6 util_convert.c:175 (parallel [
            (set (reg:SI 3 bx)
                (ior:SI (reg:SI 3 bx)
                    (reg:SI 1 dx [ D.3066+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:79 D.3055 ] [79])
        (expr_list:REG_NO_CONFLICT (reg:DI 0 ax [orig:68 D.3066 ] [68])
            (nil))))

(insn 83 80 84 6 util_convert.c:175 (set (reg:SI 0 ax [orig:66 i.20 ] [66])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 84 83 86 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:65 D.3069 ] [65])
                (ashift:SI (reg:SI 0 ax [orig:66 i.20 ] [66])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 86 84 87 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax [orig:63 D.3071 ] [63])
                (plus:SI (reg:SI 0 ax [orig:64 D.3070 ] [64])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -76 [0xffffffb4])) [0 ieeef+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 87 86 135 6 util_convert.c:175 (set (reg:DI 4 si [orig:62 D.3072 ] [62])
        (mem:DI (reg:SI 0 ax [orig:63 D.3071 ] [63]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 135 87 88 6 util_convert.c:175 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -40 [0xffffffd8])) [0 mask3+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 88 135 137 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax)
                (and:SI (reg:SI 0 ax)
                    (reg:SI 4 si [orig:62 D.3072 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:62 D.3072 ] [62])
        (nil)))

(insn 137 88 89 6 util_convert.c:175 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -36 [0xffffffdc])) [0 mask3+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 89 137 92 6 util_convert.c:175 (parallel [
            (set (reg:SI 1 dx)
                (and:SI (reg:SI 1 dx)
                    (reg:SI 5 di [ D.3072+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*andsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:62 D.3072 ] [62])
        (nil)))

(insn 92 89 139 6 util_convert.c:175 (parallel [
            (set (reg:DI 0 ax [orig:60 D.3074 ] [60])
                (plus:DI (reg:DI 0 ax [orig:61 D.3073 ] [61])
                    (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                            (const_int -56 [0xffffffc8])) [0 implied+0 S8 A32])))
            (clobber (reg:CC 17 flags))
        ]) 138 {*adddi3_1} (nil)
    (nil))

(insn 139 92 93 6 util_convert.c:175 (set (reg:DI 4 si [orig:59 D.3075 ] [59])
        (reg:DI 0 ax [orig:60 D.3074 ] [60])) 56 {*movdi_2} (nil)
    (nil))

(insn 93 139 140 6 util_convert.c:175 (parallel [
            (set (reg:DI 4 si [orig:59 D.3075 ] [59])
                (lshiftrt:DI (reg:DI 4 si [orig:59 D.3075 ] [59])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 322 {*lshrdi3_1} (nil)
    (nil))

(insn 140 93 94 6 util_convert.c:175 (set (reg:SI 0 ax)
        (reg:SI 2 cx)) 34 {*movsi_1} (nil)
    (nil))

(insn 94 140 142 6 util_convert.c:175 (parallel [
            (set (reg:SI 0 ax)
                (ior:SI (reg:SI 0 ax)
                    (reg:SI 4 si [orig:59 D.3075 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:67 D.3067 ] [67])
        (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:59 D.3075 ] [59])
            (nil))))

(insn 142 94 95 6 util_convert.c:175 (set (reg:SI 1 dx)
        (reg:SI 3 bx)) 34 {*movsi_1} (nil)
    (nil))

(insn 95 142 144 6 util_convert.c:175 (parallel [
            (set (reg:SI 1 dx)
                (ior:SI (reg:SI 1 dx)
                    (reg:SI 5 di [ D.3075+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:67 D.3067 ] [67])
        (expr_list:REG_NO_CONFLICT (reg:DI 4 si [orig:59 D.3075 ] [59])
            (nil))))

(insn 144 95 98 6 util_convert.c:175 (set (reg:SI 2 cx)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -84 [0xffffffac])) [0 D.3049+0 S4 A8])) 34 {*movsi_1} (nil)
    (nil))

(insn 98 144 99 6 util_convert.c:175 (set (mem:DI (reg:SI 2 cx) [0 S8 A64])
        (reg:DI 0 ax [orig:58 D.3076 ] [58])) 56 {*movdi_2} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 99 98 100 7 85 "" [1 uses])

(note 100 99 101 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 101 100 102 7 ("util_convert.c") 171)

(insn 102 101 103 7 util_convert.c:171 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -20 [0xffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 103 102 104 8 81 "" [1 uses])

(note 104 103 105 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 8 util_convert.c:171 (set (reg:SI 0 ax [orig:101 i ] [101])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 106 105 107 8 util_convert.c:171 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:101 i ] [101])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 nf+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 107 106 110 8 util_convert.c:171 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 110 107 111 NOTE_INSN_FUNCTION_END)

(note 111 110 119 ("util_convert.c") 184)

(note 119 111 0 NOTE_INSN_DELETED)


;; Function cf_util_i8toi4 (cf_util_i8toi4)

Spilling for insn 19.

Reloads for insn # 19
Reload 0: reload_in (SI) = (reg:SI 0 ax [orig:65 D.3093 ] [65])
	reload_out (SI) = (reg:SI 2 cx [orig:64 D.3094 ] [64])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 0 ax [orig:65 D.3093 ] [65])
	reload_out_reg: (reg:SI 2 cx [orig:64 D.3094 ] [64])
	reload_reg_rtx: (reg:SI 2 cx [orig:64 D.3094 ] [64])
;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  62 in 0  63 in 0  
64 in 2  65 in 0  66 in 0  67 in 0  68 in 0  69 in 0  


;; Hard regs used:  0 1 2 6 17

(note 1 0 3 ("util_convert.c") 187)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 188)

(insn 7 6 8 3 util_convert.c:188 (set (reg/f:SI 0 ax [orig:68 dint64 ] [68])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0 dint64+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:188 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -8 [0xfffffff8])) [0 int64+0 S4 A32])
        (reg/f:SI 0 ax [orig:68 dint64 ] [68])) 34 {*movsi_1} (nil)
    (nil))

(note 9 8 10 3 ("util_convert.c") 194)

(insn 10 9 11 3 util_convert.c:194 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 11 10 12 3 util_convert.c:194 (set (pc)
        (label_ref 29)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 12 11 13)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 13 12 14 4 90 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 15 14 16 4 ("util_convert.c") 204)

(insn 16 15 17 4 util_convert.c:204 (set (reg:SI 0 ax [orig:67 i.21 ] [67])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 17 16 46 4 util_convert.c:204 (parallel [
            (set (reg:SI 0 ax [orig:66 D.3092 ] [66])
                (ashift:SI (reg:SI 0 ax [orig:67 i.21 ] [67])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 46 17 19 4 util_convert.c:204 (set (reg:SI 2 cx [orig:64 D.3094 ] [64])
        (reg:SI 0 ax [orig:65 D.3093 ] [65])) 34 {*movsi_1} (nil)
    (nil))

(insn 19 46 20 4 util_convert.c:204 (parallel [
            (set (reg:SI 2 cx [orig:64 D.3094 ] [64])
                (plus:SI (reg:SI 2 cx [orig:64 D.3094 ] [64])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 12 [0xc])) [0 int32+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 20 19 21 4 util_convert.c:204 (set (reg:SI 0 ax [orig:63 i.22 ] [63])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 21 20 23 4 util_convert.c:204 (parallel [
            (set (reg:SI 0 ax [orig:62 D.3096 ] [62])
                (ashift:SI (reg:SI 0 ax [orig:63 i.22 ] [63])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 23 21 24 4 util_convert.c:204 (parallel [
            (set (reg:SI 0 ax [orig:60 D.3098 ] [60])
                (plus:SI (reg:SI 0 ax [orig:61 D.3097 ] [61])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -8 [0xfffffff8])) [0 int64+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 24 23 25 4 util_convert.c:204 (set (reg:DI 0 ax [orig:59 D.3099 ] [59])
        (mem:DI (reg:SI 0 ax [orig:60 D.3098 ] [60]) [0 S8 A64])) 56 {*movdi_2} (nil)
    (nil))

(insn 25 24 26 4 util_convert.c:204 (set (reg:SI 0 ax [orig:58 D.3100 ] [58])
        (reg:SI 0 ax [orig:59 D.3099 ] [59])) 34 {*movsi_1} (nil)
    (nil))

(insn 26 25 27 4 util_convert.c:204 (set (mem:SI (reg:SI 2 cx [orig:64 D.3094 ] [64]) [0 S4 A32])
        (reg:SI 0 ax [orig:58 D.3100 ] [58])) 34 {*movsi_1} (nil)
    (nil))

(note 27 26 28 4 ("util_convert.c") 194)

(insn 28 27 29 4 util_convert.c:194 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 29 28 30 5 89 "" [1 uses])

(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 util_convert.c:194 (set (reg:SI 0 ax [orig:69 i ] [69])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -4 [0xfffffffc])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 32 31 33 5 util_convert.c:194 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:69 i ] [69])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 ni+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 33 32 36 5 util_convert.c:194 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 36 33 37 NOTE_INSN_FUNCTION_END)

(note 37 36 45 ("util_convert.c") 208)

(note 45 37 0 NOTE_INSN_DELETED)


;; Function cf_util_i4toi8 (cf_util_i4toi8)

Spilling for insn 33.
Spilling for insn 40.
Spilling for insn 41.
Spilling for insn 53.
Spilling for insn 60.
Spilling for insn 61.

Reloads for insn # 33
Reload 0: reload_in (SI) = (reg:SI 0 ax [orig:77 D.3121 ] [77])
	reload_out (SI) = (reg:SI 4 si [orig:76 D.3122 ] [76])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 0 ax [orig:77 D.3121 ] [77])
	reload_out_reg: (reg:SI 4 si [orig:76 D.3122 ] [76])
	reload_reg_rtx: (reg:SI 4 si [orig:76 D.3122 ] [76])

Reloads for insn # 40
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -32 [0xffffffe0])) [0 mask1+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -32 [0xffffffe0])) [0 mask1+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:69 D.3129 ] [69]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 41
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -28 [0xffffffe4])) [0 mask1+4 S4 A32])
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -28 [0xffffffe4])) [0 mask1+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:69 D.3129 ] [69]) 4)
	reload_reg_rtx: (reg:SI 1 dx)

Reloads for insn # 53
Reload 0: reload_in (SI) = (reg:SI 0 ax [orig:66 D.3132 ] [66])
	reload_out (SI) = (reg:SI 4 si [orig:65 D.3133 ] [65])
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 0 ax [orig:66 D.3132 ] [66])
	reload_out_reg: (reg:SI 4 si [orig:65 D.3133 ] [65])
	reload_reg_rtx: (reg:SI 4 si [orig:65 D.3133 ] [65])

Reloads for insn # 60
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -24 [0xffffffe8])) [0 mask2+0 S4 A32])
	reload_out (SI) = (reg:SI 0 ax)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -24 [0xffffffe8])) [0 mask2+0 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:58 D.3140 ] [58]) 0)
	reload_reg_rtx: (reg:SI 0 ax)

Reloads for insn # 61
Reload 0: reload_in (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -20 [0xffffffec])) [0 mask2+4 S4 A32])
	reload_out (SI) = (reg:SI 1 dx)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                                                        (const_int -20 [0xffffffec])) [0 mask2+4 S4 A32])
	reload_out_reg: (subreg:SI (reg:DI 0 ax [orig:58 D.3140 ] [58]) 4)
	reload_reg_rtx: (reg:SI 1 dx)
;; Register dispositions:
58 in 0  59 in 2  60 in 0  61 in 0  62 in 0  63 in 0  
64 in 0  65 in 4  66 in 0  67 in 0  68 in 0  69 in 0  
70 in 2  71 in 0  72 in 0  73 in 0  74 in 0  75 in 0  
76 in 4  77 in 0  78 in 0  79 in 0  80 in 0  81 in 0  
82 in 0  83 in 0  84 in 0  85 in 0  86 in 0  

;; Hard regs used:  0 1 2 3 4 6 17

(note 1 0 3 ("util_convert.c") 211)

(note 3 1 5 2 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 6 5 7 3 ("util_convert.c") 212)

(insn 7 6 8 3 util_convert.c:212 (set (reg/f:SI 0 ax [orig:85 dint64 ] [85])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 12 [0xc])) [0 dint64+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 8 7 9 3 util_convert.c:212 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -36 [0xffffffdc])) [0 int64+0 S4 A32])
        (reg/f:SI 0 ax [orig:85 dint64 ] [85])) 34 {*movsi_1} (nil)
    (nil))

(note 9 8 10 3 ("util_convert.c") 220)

(insn 10 9 11 3 util_convert.c:220 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -32 [0xffffffe0])) [0 mask1+0 S8 A32])
        (const_double 0 [0x0] -1 [0xffffffff] 0 [0x0] 0 [0x0] 0 [0x0] 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 11 10 12 3 ("util_convert.c") 222)

(insn 12 11 13 3 util_convert.c:222 (set (mem/c/i:DI (plus:SI (reg/f:SI 6 bp)
                (const_int -24 [0xffffffe8])) [0 mask2+0 S8 A32])
        (const_int 0 [0x0])) 56 {*movdi_2} (nil)
    (nil))

(note 13 12 14 3 ("util_convert.c") 225)

(insn 14 13 15 3 util_convert.c:225 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 34 {*movsi_1} (nil)
    (nil))

(jump_insn 15 14 16 3 util_convert.c:225 (set (pc)
        (label_ref 69)) 380 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 16 15 17)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 17 16 18 4 95 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 4 ("util_convert.c") 226)

(insn 20 19 21 4 util_convert.c:226 (set (reg:SI 0 ax [orig:84 i.23 ] [84])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 21 20 23 4 util_convert.c:226 (parallel [
            (set (reg:SI 0 ax [orig:83 D.3115 ] [83])
                (ashift:SI (reg:SI 0 ax [orig:84 i.23 ] [84])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 23 21 24 4 util_convert.c:226 (parallel [
            (set (reg:SI 0 ax [orig:81 D.3117 ] [81])
                (plus:SI (reg:SI 0 ax [orig:82 D.3116 ] [82])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 int32+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 24 23 25 4 util_convert.c:226 (set (reg:SI 0 ax [orig:80 D.3118 ] [80])
        (mem:SI (reg:SI 0 ax [orig:81 D.3117 ] [81]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 25 24 26 4 util_convert.c:226 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:80 D.3118 ] [80])
            (const_int 0 [0x0]))) 0 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 26 25 28 4 util_convert.c:226 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 28 26 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 29 28 30 5 ("util_convert.c") 227)

(insn 30 29 31 5 util_convert.c:227 (set (reg:SI 0 ax [orig:79 i.24 ] [79])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 31 30 86 5 util_convert.c:227 (parallel [
            (set (reg:SI 0 ax [orig:78 D.3120 ] [78])
                (ashift:SI (reg:SI 0 ax [orig:79 i.24 ] [79])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 86 31 33 5 util_convert.c:227 (set (reg:SI 4 si [orig:76 D.3122 ] [76])
        (reg:SI 0 ax [orig:77 D.3121 ] [77])) 34 {*movsi_1} (nil)
    (nil))

(insn 33 86 34 5 util_convert.c:227 (parallel [
            (set (reg:SI 4 si [orig:76 D.3122 ] [76])
                (plus:SI (reg:SI 4 si [orig:76 D.3122 ] [76])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -36 [0xffffffdc])) [0 int64+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 34 33 35 5 util_convert.c:227 (set (reg:SI 0 ax [orig:75 i.25 ] [75])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 35 34 37 5 util_convert.c:227 (parallel [
            (set (reg:SI 0 ax [orig:74 D.3124 ] [74])
                (ashift:SI (reg:SI 0 ax [orig:75 i.25 ] [75])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 37 35 38 5 util_convert.c:227 (parallel [
            (set (reg:SI 0 ax [orig:72 D.3126 ] [72])
                (plus:SI (reg:SI 0 ax [orig:73 D.3125 ] [73])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 int32+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 38 37 39 5 util_convert.c:227 (set (reg:SI 0 ax [orig:71 D.3127 ] [71])
        (mem:SI (reg:SI 0 ax [orig:72 D.3126 ] [72]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 39 38 87 5 util_convert.c:227 (parallel [
            (set (reg:DI 2 cx [orig:70 D.3128 ] [70])
                (sign_extend:DI (reg:SI 0 ax [orig:71 D.3127 ] [71])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) 80 {*extendsidi2_1} (nil)
    (nil))

(insn 87 39 40 5 util_convert.c:227 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -32 [0xffffffe0])) [0 mask1+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 40 87 89 5 util_convert.c:227 (parallel [
            (set (reg:SI 0 ax)
                (ior:SI (reg:SI 0 ax)
                    (reg:SI 2 cx [orig:70 D.3128 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:70 D.3128 ] [70])
        (nil)))

(insn 89 40 41 5 util_convert.c:227 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffe4])) [0 mask1+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 41 89 44 5 util_convert.c:227 (parallel [
            (set (reg:SI 1 dx)
                (ior:SI (reg:SI 1 dx)
                    (reg:SI 3 bx [ D.3128+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:70 D.3128 ] [70])
        (nil)))

(insn 44 41 45 5 util_convert.c:227 (set (mem:DI (reg:SI 4 si [orig:76 D.3122 ] [76]) [0 S8 A64])
        (reg:DI 0 ax [orig:69 D.3129 ] [69])) 56 {*movdi_2} (nil)
    (nil))

(jump_insn 45 44 46 5 util_convert.c:227 (set (pc)
        (label_ref 65)) 380 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 47)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 47 46 48 6 96 "" [1 uses])

(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 6 ("util_convert.c") 229)

(insn 50 49 51 6 util_convert.c:229 (set (reg:SI 0 ax [orig:68 i.26 ] [68])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 51 50 91 6 util_convert.c:229 (parallel [
            (set (reg:SI 0 ax [orig:67 D.3131 ] [67])
                (ashift:SI (reg:SI 0 ax [orig:68 i.26 ] [68])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 91 51 53 6 util_convert.c:229 (set (reg:SI 4 si [orig:65 D.3133 ] [65])
        (reg:SI 0 ax [orig:66 D.3132 ] [66])) 34 {*movsi_1} (nil)
    (nil))

(insn 53 91 54 6 util_convert.c:229 (parallel [
            (set (reg:SI 4 si [orig:65 D.3133 ] [65])
                (plus:SI (reg:SI 4 si [orig:65 D.3133 ] [65])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -36 [0xffffffdc])) [0 int64+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 54 53 55 6 util_convert.c:229 (set (reg:SI 0 ax [orig:64 i.27 ] [64])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 55 54 57 6 util_convert.c:229 (parallel [
            (set (reg:SI 0 ax [orig:63 D.3135 ] [63])
                (ashift:SI (reg:SI 0 ax [orig:64 i.27 ] [64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 288 {*ashlsi3_1} (nil)
    (nil))

(insn 57 55 58 6 util_convert.c:229 (parallel [
            (set (reg:SI 0 ax [orig:61 D.3137 ] [61])
                (plus:SI (reg:SI 0 ax [orig:62 D.3136 ] [62])
                    (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int 8 [0x8])) [0 int32+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))

(insn 58 57 59 6 util_convert.c:229 (set (reg:SI 0 ax [orig:60 D.3138 ] [60])
        (mem:SI (reg:SI 0 ax [orig:61 D.3137 ] [61]) [0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 59 58 92 6 util_convert.c:229 (parallel [
            (set (reg:DI 2 cx [orig:59 D.3139 ] [59])
                (sign_extend:DI (reg:SI 0 ax [orig:60 D.3138 ] [60])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) 80 {*extendsidi2_1} (nil)
    (nil))

(insn 92 59 60 6 util_convert.c:229 (set (reg:SI 0 ax)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -24 [0xffffffe8])) [0 mask2+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 60 92 94 6 util_convert.c:229 (parallel [
            (set (reg:SI 0 ax)
                (ior:SI (reg:SI 0 ax)
                    (reg:SI 2 cx [orig:59 D.3139 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:59 D.3139 ] [59])
        (nil)))

(insn 94 60 61 6 util_convert.c:229 (set (reg:SI 1 dx)
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -20 [0xffffffec])) [0 mask2+4 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 61 94 64 6 util_convert.c:229 (parallel [
            (set (reg:SI 1 dx)
                (ior:SI (reg:SI 1 dx)
                    (reg:SI 3 bx [ D.3139+4 ])))
            (clobber (reg:CC 17 flags))
        ]) 221 {*iorsi_1} (nil)
    (expr_list:REG_NO_CONFLICT (reg:DI 2 cx [orig:59 D.3139 ] [59])
        (nil)))

(insn 64 61 65 6 util_convert.c:229 (set (mem:DI (reg:SI 4 si [orig:65 D.3133 ] [65]) [0 S8 A64])
        (reg:DI 0 ax [orig:58 D.3140 ] [58])) 56 {*movdi_2} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 65 64 66 7 98 "" [1 uses])

(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 67 66 68 7 ("util_convert.c") 225)

(insn 68 67 69 7 util_convert.c:225 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 148 {*addsi_1} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 69 68 70 8 94 "" [1 uses])

(note 70 69 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 8 util_convert.c:225 (set (reg:SI 0 ax [orig:86 i ] [86])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 i+0 S4 A32])) 34 {*movsi_1} (nil)
    (nil))

(insn 72 71 73 8 util_convert.c:225 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:86 i ] [86])
            (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int 16 [0x10])) [0 ni+0 S4 A32]))) 2 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn 73 72 76 8 util_convert.c:225 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 365 {*jcc_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 76 73 77 NOTE_INSN_FUNCTION_END)

(note 77 76 85 ("util_convert.c") 234)

(note 85 77 0 NOTE_INSN_DELETED)

